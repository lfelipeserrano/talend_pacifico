// ============================================================================
//
// Copyright (c) 2006-2015, Talend Inc.
//
// This source code has been automatically generated by_Talend Open Studio for Data Integration
// / Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
// http://www.apache.org/licenses/LICENSE-2.0
// 
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

package pacifico.productdim_0_1;

import routines.Numeric;
import routines.DataOperation;
import routines.TalendDataGenerator;
import routines.TalendStringUtil;
import routines.TalendString;
import routines.StringHandling;
import routines.Relational;
import routines.TalendDate;
import routines.Mathematical;
import routines.system.*;
import routines.system.api.*;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.List;
import java.math.BigDecimal;
import java.io.ByteArrayOutputStream;
import java.io.ByteArrayInputStream;
import java.io.DataInputStream;
import java.io.DataOutputStream;
import java.io.ObjectOutputStream;
import java.io.ObjectInputStream;
import java.io.IOException;
import java.util.Comparator;

@SuppressWarnings("unused")

/**
 * Job: productDim Purpose: <br>
 * Description: <br>
 * 
 * @author user@talend.com
 * @version 8.0.1.20211109_1610
 * @status
 */
public class productDim implements TalendJob {

	protected static void logIgnoredError(String message, Throwable cause) {
		System.err.println(message);
		if (cause != null) {
			cause.printStackTrace();
		}

	}

	public final Object obj = new Object();

	// for transmiting parameters purpose
	private Object valueObject = null;

	public Object getValueObject() {
		return this.valueObject;
	}

	public void setValueObject(Object valueObject) {
		this.valueObject = valueObject;
	}

	private final static String defaultCharset = java.nio.charset.Charset.defaultCharset().name();

	private final static String utf8Charset = "UTF-8";

	// contains type for every context property
	public class PropertiesWithType extends java.util.Properties {
		private static final long serialVersionUID = 1L;
		private java.util.Map<String, String> propertyTypes = new java.util.HashMap<>();

		public PropertiesWithType(java.util.Properties properties) {
			super(properties);
		}

		public PropertiesWithType() {
			super();
		}

		public void setContextType(String key, String type) {
			propertyTypes.put(key, type);
		}

		public String getContextType(String key) {
			return propertyTypes.get(key);
		}
	}

	// create and load default properties
	private java.util.Properties defaultProps = new java.util.Properties();

	// create application properties with default
	public class ContextProperties extends PropertiesWithType {

		private static final long serialVersionUID = 1L;

		public ContextProperties(java.util.Properties properties) {
			super(properties);
		}

		public ContextProperties() {
			super();
		}

		public void synchronizeContext() {

		}

		// if the stored or passed value is "<TALEND_NULL>" string, it mean null
		public String getStringValue(String key) {
			String origin_value = this.getProperty(key);
			if (NULL_VALUE_EXPRESSION_IN_COMMAND_STRING_FOR_CHILD_JOB_ONLY.equals(origin_value)) {
				return null;
			}
			return origin_value;
		}

	}

	protected ContextProperties context = new ContextProperties(); // will be instanciated by MS.

	public ContextProperties getContext() {
		return this.context;
	}

	private final String jobVersion = "0.1";
	private final String jobName = "productDim";
	private final String projectName = "PACIFICO";
	public Integer errorCode = null;
	private String currentComponent = "";

	private final java.util.Map<String, Object> globalMap = new java.util.HashMap<String, Object>();
	private final static java.util.Map<String, Object> junitGlobalMap = new java.util.HashMap<String, Object>();

	private final java.util.Map<String, Long> start_Hash = new java.util.HashMap<String, Long>();
	private final java.util.Map<String, Long> end_Hash = new java.util.HashMap<String, Long>();
	private final java.util.Map<String, Boolean> ok_Hash = new java.util.HashMap<String, Boolean>();
	public final java.util.List<String[]> globalBuffer = new java.util.ArrayList<String[]>();

	private RunStat runStat = new RunStat();

	// OSGi DataSource
	private final static String KEY_DB_DATASOURCES = "KEY_DB_DATASOURCES";

	private final static String KEY_DB_DATASOURCES_RAW = "KEY_DB_DATASOURCES_RAW";

	public void setDataSources(java.util.Map<String, javax.sql.DataSource> dataSources) {
		java.util.Map<String, routines.system.TalendDataSource> talendDataSources = new java.util.HashMap<String, routines.system.TalendDataSource>();
		for (java.util.Map.Entry<String, javax.sql.DataSource> dataSourceEntry : dataSources.entrySet()) {
			talendDataSources.put(dataSourceEntry.getKey(),
					new routines.system.TalendDataSource(dataSourceEntry.getValue()));
		}
		globalMap.put(KEY_DB_DATASOURCES, talendDataSources);
		globalMap.put(KEY_DB_DATASOURCES_RAW, new java.util.HashMap<String, javax.sql.DataSource>(dataSources));
	}

	public void setDataSourceReferences(List serviceReferences) throws Exception {

		java.util.Map<String, routines.system.TalendDataSource> talendDataSources = new java.util.HashMap<String, routines.system.TalendDataSource>();
		java.util.Map<String, javax.sql.DataSource> dataSources = new java.util.HashMap<String, javax.sql.DataSource>();

		for (java.util.Map.Entry<String, javax.sql.DataSource> entry : BundleUtils
				.getServices(serviceReferences, javax.sql.DataSource.class).entrySet()) {
			dataSources.put(entry.getKey(), entry.getValue());
			talendDataSources.put(entry.getKey(), new routines.system.TalendDataSource(entry.getValue()));
		}

		globalMap.put(KEY_DB_DATASOURCES, talendDataSources);
		globalMap.put(KEY_DB_DATASOURCES_RAW, new java.util.HashMap<String, javax.sql.DataSource>(dataSources));
	}

	private final java.io.ByteArrayOutputStream baos = new java.io.ByteArrayOutputStream();
	private final java.io.PrintStream errorMessagePS = new java.io.PrintStream(new java.io.BufferedOutputStream(baos));

	public String getExceptionStackTrace() {
		if ("failure".equals(this.getStatus())) {
			errorMessagePS.flush();
			return baos.toString();
		}
		return null;
	}

	private Exception exception;

	public Exception getException() {
		if ("failure".equals(this.getStatus())) {
			return this.exception;
		}
		return null;
	}

	private class TalendException extends Exception {

		private static final long serialVersionUID = 1L;

		private java.util.Map<String, Object> globalMap = null;
		private Exception e = null;
		private String currentComponent = null;
		private String virtualComponentName = null;

		public void setVirtualComponentName(String virtualComponentName) {
			this.virtualComponentName = virtualComponentName;
		}

		private TalendException(Exception e, String errorComponent, final java.util.Map<String, Object> globalMap) {
			this.currentComponent = errorComponent;
			this.globalMap = globalMap;
			this.e = e;
		}

		public Exception getException() {
			return this.e;
		}

		public String getCurrentComponent() {
			return this.currentComponent;
		}

		public String getExceptionCauseMessage(Exception e) {
			Throwable cause = e;
			String message = null;
			int i = 10;
			while (null != cause && 0 < i--) {
				message = cause.getMessage();
				if (null == message) {
					cause = cause.getCause();
				} else {
					break;
				}
			}
			if (null == message) {
				message = e.getClass().getName();
			}
			return message;
		}

		@Override
		public void printStackTrace() {
			if (!(e instanceof TalendException || e instanceof TDieException)) {
				if (virtualComponentName != null && currentComponent.indexOf(virtualComponentName + "_") == 0) {
					globalMap.put(virtualComponentName + "_ERROR_MESSAGE", getExceptionCauseMessage(e));
				}
				globalMap.put(currentComponent + "_ERROR_MESSAGE", getExceptionCauseMessage(e));
				System.err.println("Exception in component " + currentComponent + " (" + jobName + ")");
			}
			if (!(e instanceof TDieException)) {
				if (e instanceof TalendException) {
					e.printStackTrace();
				} else {
					e.printStackTrace();
					e.printStackTrace(errorMessagePS);
					productDim.this.exception = e;
				}
			}
			if (!(e instanceof TalendException)) {
				try {
					for (java.lang.reflect.Method m : this.getClass().getEnclosingClass().getMethods()) {
						if (m.getName().compareTo(currentComponent + "_error") == 0) {
							m.invoke(productDim.this, new Object[] { e, currentComponent, globalMap });
							break;
						}
					}

					if (!(e instanceof TDieException)) {
					}
				} catch (Exception e) {
					this.e.printStackTrace();
				}
			}
		}
	}

	public void tFileInputDelimited_2_error(Exception exception, String errorComponent,
			final java.util.Map<String, Object> globalMap) throws TalendException {

		end_Hash.put(errorComponent, System.currentTimeMillis());

		status = "failure";

		tFileInputDelimited_2_onSubJobError(exception, errorComponent, globalMap);
	}

	public void tMap_1_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap)
			throws TalendException {

		end_Hash.put(errorComponent, System.currentTimeMillis());

		status = "failure";

		tFileInputDelimited_2_onSubJobError(exception, errorComponent, globalMap);
	}

	public void tLogRow_1_error(Exception exception, String errorComponent,
			final java.util.Map<String, Object> globalMap) throws TalendException {

		end_Hash.put(errorComponent, System.currentTimeMillis());

		status = "failure";

		tFileInputDelimited_2_onSubJobError(exception, errorComponent, globalMap);
	}

	public void tFileOutputDelimited_1_error(Exception exception, String errorComponent,
			final java.util.Map<String, Object> globalMap) throws TalendException {

		end_Hash.put(errorComponent, System.currentTimeMillis());

		status = "failure";

		tFileInputDelimited_2_onSubJobError(exception, errorComponent, globalMap);
	}

	public void tS3Connection_1_error(Exception exception, String errorComponent,
			final java.util.Map<String, Object> globalMap) throws TalendException {

		end_Hash.put(errorComponent, System.currentTimeMillis());

		status = "failure";

		tS3Connection_1_onSubJobError(exception, errorComponent, globalMap);
	}

	public void tS3Put_1_error(Exception exception, String errorComponent,
			final java.util.Map<String, Object> globalMap) throws TalendException {

		end_Hash.put(errorComponent, System.currentTimeMillis());

		status = "failure";

		tS3Put_1_onSubJobError(exception, errorComponent, globalMap);
	}

	public void tFileInputDelimited_1_error(Exception exception, String errorComponent,
			final java.util.Map<String, Object> globalMap) throws TalendException {

		end_Hash.put(errorComponent, System.currentTimeMillis());

		status = "failure";

		tFileInputDelimited_2_onSubJobError(exception, errorComponent, globalMap);
	}

	public void tFileInputDelimited_3_error(Exception exception, String errorComponent,
			final java.util.Map<String, Object> globalMap) throws TalendException {

		end_Hash.put(errorComponent, System.currentTimeMillis());

		status = "failure";

		tFileInputDelimited_2_onSubJobError(exception, errorComponent, globalMap);
	}

	public void tAdvancedHash_productCategory_error(Exception exception, String errorComponent,
			final java.util.Map<String, Object> globalMap) throws TalendException {

		end_Hash.put(errorComponent, System.currentTimeMillis());

		status = "failure";

		tFileInputDelimited_2_onSubJobError(exception, errorComponent, globalMap);
	}

	public void tAdvancedHash_productTemplate_error(Exception exception, String errorComponent,
			final java.util.Map<String, Object> globalMap) throws TalendException {

		end_Hash.put(errorComponent, System.currentTimeMillis());

		status = "failure";

		tFileInputDelimited_2_onSubJobError(exception, errorComponent, globalMap);
	}

	public void tFileInputDelimited_2_onSubJobError(Exception exception, String errorComponent,
			final java.util.Map<String, Object> globalMap) throws TalendException {

		resumeUtil.addLog("SYSTEM_LOG", "NODE:" + errorComponent, "", Thread.currentThread().getId() + "", "FATAL", "",
				exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception), "");

	}

	public void tS3Connection_1_onSubJobError(Exception exception, String errorComponent,
			final java.util.Map<String, Object> globalMap) throws TalendException {

		resumeUtil.addLog("SYSTEM_LOG", "NODE:" + errorComponent, "", Thread.currentThread().getId() + "", "FATAL", "",
				exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception), "");

	}

	public void tS3Put_1_onSubJobError(Exception exception, String errorComponent,
			final java.util.Map<String, Object> globalMap) throws TalendException {

		resumeUtil.addLog("SYSTEM_LOG", "NODE:" + errorComponent, "", Thread.currentThread().getId() + "", "FATAL", "",
				exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception), "");

	}

	public static class row1Struct implements routines.system.IPersistableRow<row1Struct> {
		final static byte[] commonByteArrayLock_PACIFICO_productDim = new byte[0];
		static byte[] commonByteArray_PACIFICO_productDim = new byte[0];

		public String product_name;

		public String getProduct_name() {
			return this.product_name;
		}

		public String product_description;

		public String getProduct_description() {
			return this.product_description;
		}

		public String category;

		public String getCategory() {
			return this.category;
		}

		public String category_description;

		public String getCategory_description() {
			return this.category_description;
		}

		public String weight;

		public String getWeight() {
			return this.weight;
		}

		public String volume;

		public String getVolume() {
			return this.volume;
		}

		public String barcode;

		public String getBarcode() {
			return this.barcode;
		}

		public String product_code;

		public String getProduct_code() {
			return this.product_code;
		}

		private String readString(ObjectInputStream dis) throws IOException {
			String strReturn = null;
			int length = 0;
			length = dis.readInt();
			if (length == -1) {
				strReturn = null;
			} else {
				if (length > commonByteArray_PACIFICO_productDim.length) {
					if (length < 1024 && commonByteArray_PACIFICO_productDim.length == 0) {
						commonByteArray_PACIFICO_productDim = new byte[1024];
					} else {
						commonByteArray_PACIFICO_productDim = new byte[2 * length];
					}
				}
				dis.readFully(commonByteArray_PACIFICO_productDim, 0, length);
				strReturn = new String(commonByteArray_PACIFICO_productDim, 0, length, utf8Charset);
			}
			return strReturn;
		}

		private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException {
			String strReturn = null;
			int length = 0;
			length = unmarshaller.readInt();
			if (length == -1) {
				strReturn = null;
			} else {
				if (length > commonByteArray_PACIFICO_productDim.length) {
					if (length < 1024 && commonByteArray_PACIFICO_productDim.length == 0) {
						commonByteArray_PACIFICO_productDim = new byte[1024];
					} else {
						commonByteArray_PACIFICO_productDim = new byte[2 * length];
					}
				}
				unmarshaller.readFully(commonByteArray_PACIFICO_productDim, 0, length);
				strReturn = new String(commonByteArray_PACIFICO_productDim, 0, length, utf8Charset);
			}
			return strReturn;
		}

		private void writeString(String str, ObjectOutputStream dos) throws IOException {
			if (str == null) {
				dos.writeInt(-1);
			} else {
				byte[] byteArray = str.getBytes(utf8Charset);
				dos.writeInt(byteArray.length);
				dos.write(byteArray);
			}
		}

		private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException {
			if (str == null) {
				marshaller.writeInt(-1);
			} else {
				byte[] byteArray = str.getBytes(utf8Charset);
				marshaller.writeInt(byteArray.length);
				marshaller.write(byteArray);
			}
		}

		public void readData(ObjectInputStream dis) {

			synchronized (commonByteArrayLock_PACIFICO_productDim) {

				try {

					int length = 0;

					this.product_name = readString(dis);

					this.product_description = readString(dis);

					this.category = readString(dis);

					this.category_description = readString(dis);

					this.weight = readString(dis);

					this.volume = readString(dis);

					this.barcode = readString(dis);

					this.product_code = readString(dis);

				} catch (IOException e) {
					throw new RuntimeException(e);

				}

			}

		}

		public void readData(org.jboss.marshalling.Unmarshaller dis) {

			synchronized (commonByteArrayLock_PACIFICO_productDim) {

				try {

					int length = 0;

					this.product_name = readString(dis);

					this.product_description = readString(dis);

					this.category = readString(dis);

					this.category_description = readString(dis);

					this.weight = readString(dis);

					this.volume = readString(dis);

					this.barcode = readString(dis);

					this.product_code = readString(dis);

				} catch (IOException e) {
					throw new RuntimeException(e);

				}

			}

		}

		public void writeData(ObjectOutputStream dos) {
			try {

				// String

				writeString(this.product_name, dos);

				// String

				writeString(this.product_description, dos);

				// String

				writeString(this.category, dos);

				// String

				writeString(this.category_description, dos);

				// String

				writeString(this.weight, dos);

				// String

				writeString(this.volume, dos);

				// String

				writeString(this.barcode, dos);

				// String

				writeString(this.product_code, dos);

			} catch (IOException e) {
				throw new RuntimeException(e);
			}

		}

		public void writeData(org.jboss.marshalling.Marshaller dos) {
			try {

				// String

				writeString(this.product_name, dos);

				// String

				writeString(this.product_description, dos);

				// String

				writeString(this.category, dos);

				// String

				writeString(this.category_description, dos);

				// String

				writeString(this.weight, dos);

				// String

				writeString(this.volume, dos);

				// String

				writeString(this.barcode, dos);

				// String

				writeString(this.product_code, dos);

			} catch (IOException e) {
				throw new RuntimeException(e);
			}

		}

		public String toString() {

			StringBuilder sb = new StringBuilder();
			sb.append(super.toString());
			sb.append("[");
			sb.append("product_name=" + product_name);
			sb.append(",product_description=" + product_description);
			sb.append(",category=" + category);
			sb.append(",category_description=" + category_description);
			sb.append(",weight=" + weight);
			sb.append(",volume=" + volume);
			sb.append(",barcode=" + barcode);
			sb.append(",product_code=" + product_code);
			sb.append("]");

			return sb.toString();
		}

		/**
		 * Compare keys
		 */
		public int compareTo(row1Struct other) {

			int returnValue = -1;

			return returnValue;
		}

		private int checkNullsAndCompare(Object object1, Object object2) {
			int returnValue = 0;
			if (object1 instanceof Comparable && object2 instanceof Comparable) {
				returnValue = ((Comparable) object1).compareTo(object2);
			} else if (object1 != null && object2 != null) {
				returnValue = compareStrings(object1.toString(), object2.toString());
			} else if (object1 == null && object2 != null) {
				returnValue = 1;
			} else if (object1 != null && object2 == null) {
				returnValue = -1;
			} else {
				returnValue = 0;
			}

			return returnValue;
		}

		private int compareStrings(String string1, String string2) {
			return string1.compareTo(string2);
		}

	}

	public static class DimProductStruct implements routines.system.IPersistableRow<DimProductStruct> {
		final static byte[] commonByteArrayLock_PACIFICO_productDim = new byte[0];
		static byte[] commonByteArray_PACIFICO_productDim = new byte[0];

		public String product_name;

		public String getProduct_name() {
			return this.product_name;
		}

		public String product_description;

		public String getProduct_description() {
			return this.product_description;
		}

		public String category;

		public String getCategory() {
			return this.category;
		}

		public String category_description;

		public String getCategory_description() {
			return this.category_description;
		}

		public String weight;

		public String getWeight() {
			return this.weight;
		}

		public String volume;

		public String getVolume() {
			return this.volume;
		}

		public String barcode;

		public String getBarcode() {
			return this.barcode;
		}

		public String product_code;

		public String getProduct_code() {
			return this.product_code;
		}

		private String readString(ObjectInputStream dis) throws IOException {
			String strReturn = null;
			int length = 0;
			length = dis.readInt();
			if (length == -1) {
				strReturn = null;
			} else {
				if (length > commonByteArray_PACIFICO_productDim.length) {
					if (length < 1024 && commonByteArray_PACIFICO_productDim.length == 0) {
						commonByteArray_PACIFICO_productDim = new byte[1024];
					} else {
						commonByteArray_PACIFICO_productDim = new byte[2 * length];
					}
				}
				dis.readFully(commonByteArray_PACIFICO_productDim, 0, length);
				strReturn = new String(commonByteArray_PACIFICO_productDim, 0, length, utf8Charset);
			}
			return strReturn;
		}

		private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException {
			String strReturn = null;
			int length = 0;
			length = unmarshaller.readInt();
			if (length == -1) {
				strReturn = null;
			} else {
				if (length > commonByteArray_PACIFICO_productDim.length) {
					if (length < 1024 && commonByteArray_PACIFICO_productDim.length == 0) {
						commonByteArray_PACIFICO_productDim = new byte[1024];
					} else {
						commonByteArray_PACIFICO_productDim = new byte[2 * length];
					}
				}
				unmarshaller.readFully(commonByteArray_PACIFICO_productDim, 0, length);
				strReturn = new String(commonByteArray_PACIFICO_productDim, 0, length, utf8Charset);
			}
			return strReturn;
		}

		private void writeString(String str, ObjectOutputStream dos) throws IOException {
			if (str == null) {
				dos.writeInt(-1);
			} else {
				byte[] byteArray = str.getBytes(utf8Charset);
				dos.writeInt(byteArray.length);
				dos.write(byteArray);
			}
		}

		private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException {
			if (str == null) {
				marshaller.writeInt(-1);
			} else {
				byte[] byteArray = str.getBytes(utf8Charset);
				marshaller.writeInt(byteArray.length);
				marshaller.write(byteArray);
			}
		}

		public void readData(ObjectInputStream dis) {

			synchronized (commonByteArrayLock_PACIFICO_productDim) {

				try {

					int length = 0;

					this.product_name = readString(dis);

					this.product_description = readString(dis);

					this.category = readString(dis);

					this.category_description = readString(dis);

					this.weight = readString(dis);

					this.volume = readString(dis);

					this.barcode = readString(dis);

					this.product_code = readString(dis);

				} catch (IOException e) {
					throw new RuntimeException(e);

				}

			}

		}

		public void readData(org.jboss.marshalling.Unmarshaller dis) {

			synchronized (commonByteArrayLock_PACIFICO_productDim) {

				try {

					int length = 0;

					this.product_name = readString(dis);

					this.product_description = readString(dis);

					this.category = readString(dis);

					this.category_description = readString(dis);

					this.weight = readString(dis);

					this.volume = readString(dis);

					this.barcode = readString(dis);

					this.product_code = readString(dis);

				} catch (IOException e) {
					throw new RuntimeException(e);

				}

			}

		}

		public void writeData(ObjectOutputStream dos) {
			try {

				// String

				writeString(this.product_name, dos);

				// String

				writeString(this.product_description, dos);

				// String

				writeString(this.category, dos);

				// String

				writeString(this.category_description, dos);

				// String

				writeString(this.weight, dos);

				// String

				writeString(this.volume, dos);

				// String

				writeString(this.barcode, dos);

				// String

				writeString(this.product_code, dos);

			} catch (IOException e) {
				throw new RuntimeException(e);
			}

		}

		public void writeData(org.jboss.marshalling.Marshaller dos) {
			try {

				// String

				writeString(this.product_name, dos);

				// String

				writeString(this.product_description, dos);

				// String

				writeString(this.category, dos);

				// String

				writeString(this.category_description, dos);

				// String

				writeString(this.weight, dos);

				// String

				writeString(this.volume, dos);

				// String

				writeString(this.barcode, dos);

				// String

				writeString(this.product_code, dos);

			} catch (IOException e) {
				throw new RuntimeException(e);
			}

		}

		public String toString() {

			StringBuilder sb = new StringBuilder();
			sb.append(super.toString());
			sb.append("[");
			sb.append("product_name=" + product_name);
			sb.append(",product_description=" + product_description);
			sb.append(",category=" + category);
			sb.append(",category_description=" + category_description);
			sb.append(",weight=" + weight);
			sb.append(",volume=" + volume);
			sb.append(",barcode=" + barcode);
			sb.append(",product_code=" + product_code);
			sb.append("]");

			return sb.toString();
		}

		/**
		 * Compare keys
		 */
		public int compareTo(DimProductStruct other) {

			int returnValue = -1;

			return returnValue;
		}

		private int checkNullsAndCompare(Object object1, Object object2) {
			int returnValue = 0;
			if (object1 instanceof Comparable && object2 instanceof Comparable) {
				returnValue = ((Comparable) object1).compareTo(object2);
			} else if (object1 != null && object2 != null) {
				returnValue = compareStrings(object1.toString(), object2.toString());
			} else if (object1 == null && object2 != null) {
				returnValue = 1;
			} else if (object1 != null && object2 == null) {
				returnValue = -1;
			} else {
				returnValue = 0;
			}

			return returnValue;
		}

		private int compareStrings(String string1, String string2) {
			return string1.compareTo(string2);
		}

	}

	public static class productProductStruct implements routines.system.IPersistableRow<productProductStruct> {
		final static byte[] commonByteArrayLock_PACIFICO_productDim = new byte[0];
		static byte[] commonByteArray_PACIFICO_productDim = new byte[0];

		public Integer id;

		public Integer getId() {
			return this.id;
		}

		public String message_main_attachment_id;

		public String getMessage_main_attachment_id() {
			return this.message_main_attachment_id;
		}

		public String default_code;

		public String getDefault_code() {
			return this.default_code;
		}

		public Boolean active;

		public Boolean getActive() {
			return this.active;
		}

		public Integer product_tmpl_id;

		public Integer getProduct_tmpl_id() {
			return this.product_tmpl_id;
		}

		public String barcode;

		public String getBarcode() {
			return this.barcode;
		}

		public String combination_indices;

		public String getCombination_indices() {
			return this.combination_indices;
		}

		public String volume;

		public String getVolume() {
			return this.volume;
		}

		public String weight;

		public String getWeight() {
			return this.weight;
		}

		public Boolean can_image_variant_1024_be_zoomed;

		public Boolean getCan_image_variant_1024_be_zoomed() {
			return this.can_image_variant_1024_be_zoomed;
		}

		public Integer create_uid;

		public Integer getCreate_uid() {
			return this.create_uid;
		}

		public java.util.Date create_date;

		public java.util.Date getCreate_date() {
			return this.create_date;
		}

		public Integer write_uid;

		public Integer getWrite_uid() {
			return this.write_uid;
		}

		public java.util.Date write_date;

		public java.util.Date getWrite_date() {
			return this.write_date;
		}

		private Integer readInteger(ObjectInputStream dis) throws IOException {
			Integer intReturn;
			int length = 0;
			length = dis.readByte();
			if (length == -1) {
				intReturn = null;
			} else {
				intReturn = dis.readInt();
			}
			return intReturn;
		}

		private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException {
			Integer intReturn;
			int length = 0;
			length = dis.readByte();
			if (length == -1) {
				intReturn = null;
			} else {
				intReturn = dis.readInt();
			}
			return intReturn;
		}

		private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException {
			if (intNum == null) {
				dos.writeByte(-1);
			} else {
				dos.writeByte(0);
				dos.writeInt(intNum);
			}
		}

		private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException {
			if (intNum == null) {
				marshaller.writeByte(-1);
			} else {
				marshaller.writeByte(0);
				marshaller.writeInt(intNum);
			}
		}

		private String readString(ObjectInputStream dis) throws IOException {
			String strReturn = null;
			int length = 0;
			length = dis.readInt();
			if (length == -1) {
				strReturn = null;
			} else {
				if (length > commonByteArray_PACIFICO_productDim.length) {
					if (length < 1024 && commonByteArray_PACIFICO_productDim.length == 0) {
						commonByteArray_PACIFICO_productDim = new byte[1024];
					} else {
						commonByteArray_PACIFICO_productDim = new byte[2 * length];
					}
				}
				dis.readFully(commonByteArray_PACIFICO_productDim, 0, length);
				strReturn = new String(commonByteArray_PACIFICO_productDim, 0, length, utf8Charset);
			}
			return strReturn;
		}

		private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException {
			String strReturn = null;
			int length = 0;
			length = unmarshaller.readInt();
			if (length == -1) {
				strReturn = null;
			} else {
				if (length > commonByteArray_PACIFICO_productDim.length) {
					if (length < 1024 && commonByteArray_PACIFICO_productDim.length == 0) {
						commonByteArray_PACIFICO_productDim = new byte[1024];
					} else {
						commonByteArray_PACIFICO_productDim = new byte[2 * length];
					}
				}
				unmarshaller.readFully(commonByteArray_PACIFICO_productDim, 0, length);
				strReturn = new String(commonByteArray_PACIFICO_productDim, 0, length, utf8Charset);
			}
			return strReturn;
		}

		private void writeString(String str, ObjectOutputStream dos) throws IOException {
			if (str == null) {
				dos.writeInt(-1);
			} else {
				byte[] byteArray = str.getBytes(utf8Charset);
				dos.writeInt(byteArray.length);
				dos.write(byteArray);
			}
		}

		private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException {
			if (str == null) {
				marshaller.writeInt(-1);
			} else {
				byte[] byteArray = str.getBytes(utf8Charset);
				marshaller.writeInt(byteArray.length);
				marshaller.write(byteArray);
			}
		}

		private java.util.Date readDate(ObjectInputStream dis) throws IOException {
			java.util.Date dateReturn = null;
			int length = 0;
			length = dis.readByte();
			if (length == -1) {
				dateReturn = null;
			} else {
				dateReturn = new Date(dis.readLong());
			}
			return dateReturn;
		}

		private java.util.Date readDate(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException {
			java.util.Date dateReturn = null;
			int length = 0;
			length = unmarshaller.readByte();
			if (length == -1) {
				dateReturn = null;
			} else {
				dateReturn = new Date(unmarshaller.readLong());
			}
			return dateReturn;
		}

		private void writeDate(java.util.Date date1, ObjectOutputStream dos) throws IOException {
			if (date1 == null) {
				dos.writeByte(-1);
			} else {
				dos.writeByte(0);
				dos.writeLong(date1.getTime());
			}
		}

		private void writeDate(java.util.Date date1, org.jboss.marshalling.Marshaller marshaller) throws IOException {
			if (date1 == null) {
				marshaller.writeByte(-1);
			} else {
				marshaller.writeByte(0);
				marshaller.writeLong(date1.getTime());
			}
		}

		public void readData(ObjectInputStream dis) {

			synchronized (commonByteArrayLock_PACIFICO_productDim) {

				try {

					int length = 0;

					this.id = readInteger(dis);

					this.message_main_attachment_id = readString(dis);

					this.default_code = readString(dis);

					length = dis.readByte();
					if (length == -1) {
						this.active = null;
					} else {
						this.active = dis.readBoolean();
					}

					this.product_tmpl_id = readInteger(dis);

					this.barcode = readString(dis);

					this.combination_indices = readString(dis);

					this.volume = readString(dis);

					this.weight = readString(dis);

					length = dis.readByte();
					if (length == -1) {
						this.can_image_variant_1024_be_zoomed = null;
					} else {
						this.can_image_variant_1024_be_zoomed = dis.readBoolean();
					}

					this.create_uid = readInteger(dis);

					this.create_date = readDate(dis);

					this.write_uid = readInteger(dis);

					this.write_date = readDate(dis);

				} catch (IOException e) {
					throw new RuntimeException(e);

				}

			}

		}

		public void readData(org.jboss.marshalling.Unmarshaller dis) {

			synchronized (commonByteArrayLock_PACIFICO_productDim) {

				try {

					int length = 0;

					this.id = readInteger(dis);

					this.message_main_attachment_id = readString(dis);

					this.default_code = readString(dis);

					length = dis.readByte();
					if (length == -1) {
						this.active = null;
					} else {
						this.active = dis.readBoolean();
					}

					this.product_tmpl_id = readInteger(dis);

					this.barcode = readString(dis);

					this.combination_indices = readString(dis);

					this.volume = readString(dis);

					this.weight = readString(dis);

					length = dis.readByte();
					if (length == -1) {
						this.can_image_variant_1024_be_zoomed = null;
					} else {
						this.can_image_variant_1024_be_zoomed = dis.readBoolean();
					}

					this.create_uid = readInteger(dis);

					this.create_date = readDate(dis);

					this.write_uid = readInteger(dis);

					this.write_date = readDate(dis);

				} catch (IOException e) {
					throw new RuntimeException(e);

				}

			}

		}

		public void writeData(ObjectOutputStream dos) {
			try {

				// Integer

				writeInteger(this.id, dos);

				// String

				writeString(this.message_main_attachment_id, dos);

				// String

				writeString(this.default_code, dos);

				// Boolean

				if (this.active == null) {
					dos.writeByte(-1);
				} else {
					dos.writeByte(0);
					dos.writeBoolean(this.active);
				}

				// Integer

				writeInteger(this.product_tmpl_id, dos);

				// String

				writeString(this.barcode, dos);

				// String

				writeString(this.combination_indices, dos);

				// String

				writeString(this.volume, dos);

				// String

				writeString(this.weight, dos);

				// Boolean

				if (this.can_image_variant_1024_be_zoomed == null) {
					dos.writeByte(-1);
				} else {
					dos.writeByte(0);
					dos.writeBoolean(this.can_image_variant_1024_be_zoomed);
				}

				// Integer

				writeInteger(this.create_uid, dos);

				// java.util.Date

				writeDate(this.create_date, dos);

				// Integer

				writeInteger(this.write_uid, dos);

				// java.util.Date

				writeDate(this.write_date, dos);

			} catch (IOException e) {
				throw new RuntimeException(e);
			}

		}

		public void writeData(org.jboss.marshalling.Marshaller dos) {
			try {

				// Integer

				writeInteger(this.id, dos);

				// String

				writeString(this.message_main_attachment_id, dos);

				// String

				writeString(this.default_code, dos);

				// Boolean

				if (this.active == null) {
					dos.writeByte(-1);
				} else {
					dos.writeByte(0);
					dos.writeBoolean(this.active);
				}

				// Integer

				writeInteger(this.product_tmpl_id, dos);

				// String

				writeString(this.barcode, dos);

				// String

				writeString(this.combination_indices, dos);

				// String

				writeString(this.volume, dos);

				// String

				writeString(this.weight, dos);

				// Boolean

				if (this.can_image_variant_1024_be_zoomed == null) {
					dos.writeByte(-1);
				} else {
					dos.writeByte(0);
					dos.writeBoolean(this.can_image_variant_1024_be_zoomed);
				}

				// Integer

				writeInteger(this.create_uid, dos);

				// java.util.Date

				writeDate(this.create_date, dos);

				// Integer

				writeInteger(this.write_uid, dos);

				// java.util.Date

				writeDate(this.write_date, dos);

			} catch (IOException e) {
				throw new RuntimeException(e);
			}

		}

		public String toString() {

			StringBuilder sb = new StringBuilder();
			sb.append(super.toString());
			sb.append("[");
			sb.append("id=" + String.valueOf(id));
			sb.append(",message_main_attachment_id=" + message_main_attachment_id);
			sb.append(",default_code=" + default_code);
			sb.append(",active=" + String.valueOf(active));
			sb.append(",product_tmpl_id=" + String.valueOf(product_tmpl_id));
			sb.append(",barcode=" + barcode);
			sb.append(",combination_indices=" + combination_indices);
			sb.append(",volume=" + volume);
			sb.append(",weight=" + weight);
			sb.append(",can_image_variant_1024_be_zoomed=" + String.valueOf(can_image_variant_1024_be_zoomed));
			sb.append(",create_uid=" + String.valueOf(create_uid));
			sb.append(",create_date=" + String.valueOf(create_date));
			sb.append(",write_uid=" + String.valueOf(write_uid));
			sb.append(",write_date=" + String.valueOf(write_date));
			sb.append("]");

			return sb.toString();
		}

		/**
		 * Compare keys
		 */
		public int compareTo(productProductStruct other) {

			int returnValue = -1;

			return returnValue;
		}

		private int checkNullsAndCompare(Object object1, Object object2) {
			int returnValue = 0;
			if (object1 instanceof Comparable && object2 instanceof Comparable) {
				returnValue = ((Comparable) object1).compareTo(object2);
			} else if (object1 != null && object2 != null) {
				returnValue = compareStrings(object1.toString(), object2.toString());
			} else if (object1 == null && object2 != null) {
				returnValue = 1;
			} else if (object1 != null && object2 == null) {
				returnValue = -1;
			} else {
				returnValue = 0;
			}

			return returnValue;
		}

		private int compareStrings(String string1, String string2) {
			return string1.compareTo(string2);
		}

	}

	public static class after_tFileInputDelimited_2Struct
			implements routines.system.IPersistableRow<after_tFileInputDelimited_2Struct> {
		final static byte[] commonByteArrayLock_PACIFICO_productDim = new byte[0];
		static byte[] commonByteArray_PACIFICO_productDim = new byte[0];

		public Integer id;

		public Integer getId() {
			return this.id;
		}

		public String message_main_attachment_id;

		public String getMessage_main_attachment_id() {
			return this.message_main_attachment_id;
		}

		public String default_code;

		public String getDefault_code() {
			return this.default_code;
		}

		public Boolean active;

		public Boolean getActive() {
			return this.active;
		}

		public Integer product_tmpl_id;

		public Integer getProduct_tmpl_id() {
			return this.product_tmpl_id;
		}

		public String barcode;

		public String getBarcode() {
			return this.barcode;
		}

		public String combination_indices;

		public String getCombination_indices() {
			return this.combination_indices;
		}

		public String volume;

		public String getVolume() {
			return this.volume;
		}

		public String weight;

		public String getWeight() {
			return this.weight;
		}

		public Boolean can_image_variant_1024_be_zoomed;

		public Boolean getCan_image_variant_1024_be_zoomed() {
			return this.can_image_variant_1024_be_zoomed;
		}

		public Integer create_uid;

		public Integer getCreate_uid() {
			return this.create_uid;
		}

		public java.util.Date create_date;

		public java.util.Date getCreate_date() {
			return this.create_date;
		}

		public Integer write_uid;

		public Integer getWrite_uid() {
			return this.write_uid;
		}

		public java.util.Date write_date;

		public java.util.Date getWrite_date() {
			return this.write_date;
		}

		private Integer readInteger(ObjectInputStream dis) throws IOException {
			Integer intReturn;
			int length = 0;
			length = dis.readByte();
			if (length == -1) {
				intReturn = null;
			} else {
				intReturn = dis.readInt();
			}
			return intReturn;
		}

		private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException {
			Integer intReturn;
			int length = 0;
			length = dis.readByte();
			if (length == -1) {
				intReturn = null;
			} else {
				intReturn = dis.readInt();
			}
			return intReturn;
		}

		private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException {
			if (intNum == null) {
				dos.writeByte(-1);
			} else {
				dos.writeByte(0);
				dos.writeInt(intNum);
			}
		}

		private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException {
			if (intNum == null) {
				marshaller.writeByte(-1);
			} else {
				marshaller.writeByte(0);
				marshaller.writeInt(intNum);
			}
		}

		private String readString(ObjectInputStream dis) throws IOException {
			String strReturn = null;
			int length = 0;
			length = dis.readInt();
			if (length == -1) {
				strReturn = null;
			} else {
				if (length > commonByteArray_PACIFICO_productDim.length) {
					if (length < 1024 && commonByteArray_PACIFICO_productDim.length == 0) {
						commonByteArray_PACIFICO_productDim = new byte[1024];
					} else {
						commonByteArray_PACIFICO_productDim = new byte[2 * length];
					}
				}
				dis.readFully(commonByteArray_PACIFICO_productDim, 0, length);
				strReturn = new String(commonByteArray_PACIFICO_productDim, 0, length, utf8Charset);
			}
			return strReturn;
		}

		private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException {
			String strReturn = null;
			int length = 0;
			length = unmarshaller.readInt();
			if (length == -1) {
				strReturn = null;
			} else {
				if (length > commonByteArray_PACIFICO_productDim.length) {
					if (length < 1024 && commonByteArray_PACIFICO_productDim.length == 0) {
						commonByteArray_PACIFICO_productDim = new byte[1024];
					} else {
						commonByteArray_PACIFICO_productDim = new byte[2 * length];
					}
				}
				unmarshaller.readFully(commonByteArray_PACIFICO_productDim, 0, length);
				strReturn = new String(commonByteArray_PACIFICO_productDim, 0, length, utf8Charset);
			}
			return strReturn;
		}

		private void writeString(String str, ObjectOutputStream dos) throws IOException {
			if (str == null) {
				dos.writeInt(-1);
			} else {
				byte[] byteArray = str.getBytes(utf8Charset);
				dos.writeInt(byteArray.length);
				dos.write(byteArray);
			}
		}

		private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException {
			if (str == null) {
				marshaller.writeInt(-1);
			} else {
				byte[] byteArray = str.getBytes(utf8Charset);
				marshaller.writeInt(byteArray.length);
				marshaller.write(byteArray);
			}
		}

		private java.util.Date readDate(ObjectInputStream dis) throws IOException {
			java.util.Date dateReturn = null;
			int length = 0;
			length = dis.readByte();
			if (length == -1) {
				dateReturn = null;
			} else {
				dateReturn = new Date(dis.readLong());
			}
			return dateReturn;
		}

		private java.util.Date readDate(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException {
			java.util.Date dateReturn = null;
			int length = 0;
			length = unmarshaller.readByte();
			if (length == -1) {
				dateReturn = null;
			} else {
				dateReturn = new Date(unmarshaller.readLong());
			}
			return dateReturn;
		}

		private void writeDate(java.util.Date date1, ObjectOutputStream dos) throws IOException {
			if (date1 == null) {
				dos.writeByte(-1);
			} else {
				dos.writeByte(0);
				dos.writeLong(date1.getTime());
			}
		}

		private void writeDate(java.util.Date date1, org.jboss.marshalling.Marshaller marshaller) throws IOException {
			if (date1 == null) {
				marshaller.writeByte(-1);
			} else {
				marshaller.writeByte(0);
				marshaller.writeLong(date1.getTime());
			}
		}

		public void readData(ObjectInputStream dis) {

			synchronized (commonByteArrayLock_PACIFICO_productDim) {

				try {

					int length = 0;

					this.id = readInteger(dis);

					this.message_main_attachment_id = readString(dis);

					this.default_code = readString(dis);

					length = dis.readByte();
					if (length == -1) {
						this.active = null;
					} else {
						this.active = dis.readBoolean();
					}

					this.product_tmpl_id = readInteger(dis);

					this.barcode = readString(dis);

					this.combination_indices = readString(dis);

					this.volume = readString(dis);

					this.weight = readString(dis);

					length = dis.readByte();
					if (length == -1) {
						this.can_image_variant_1024_be_zoomed = null;
					} else {
						this.can_image_variant_1024_be_zoomed = dis.readBoolean();
					}

					this.create_uid = readInteger(dis);

					this.create_date = readDate(dis);

					this.write_uid = readInteger(dis);

					this.write_date = readDate(dis);

				} catch (IOException e) {
					throw new RuntimeException(e);

				}

			}

		}

		public void readData(org.jboss.marshalling.Unmarshaller dis) {

			synchronized (commonByteArrayLock_PACIFICO_productDim) {

				try {

					int length = 0;

					this.id = readInteger(dis);

					this.message_main_attachment_id = readString(dis);

					this.default_code = readString(dis);

					length = dis.readByte();
					if (length == -1) {
						this.active = null;
					} else {
						this.active = dis.readBoolean();
					}

					this.product_tmpl_id = readInteger(dis);

					this.barcode = readString(dis);

					this.combination_indices = readString(dis);

					this.volume = readString(dis);

					this.weight = readString(dis);

					length = dis.readByte();
					if (length == -1) {
						this.can_image_variant_1024_be_zoomed = null;
					} else {
						this.can_image_variant_1024_be_zoomed = dis.readBoolean();
					}

					this.create_uid = readInteger(dis);

					this.create_date = readDate(dis);

					this.write_uid = readInteger(dis);

					this.write_date = readDate(dis);

				} catch (IOException e) {
					throw new RuntimeException(e);

				}

			}

		}

		public void writeData(ObjectOutputStream dos) {
			try {

				// Integer

				writeInteger(this.id, dos);

				// String

				writeString(this.message_main_attachment_id, dos);

				// String

				writeString(this.default_code, dos);

				// Boolean

				if (this.active == null) {
					dos.writeByte(-1);
				} else {
					dos.writeByte(0);
					dos.writeBoolean(this.active);
				}

				// Integer

				writeInteger(this.product_tmpl_id, dos);

				// String

				writeString(this.barcode, dos);

				// String

				writeString(this.combination_indices, dos);

				// String

				writeString(this.volume, dos);

				// String

				writeString(this.weight, dos);

				// Boolean

				if (this.can_image_variant_1024_be_zoomed == null) {
					dos.writeByte(-1);
				} else {
					dos.writeByte(0);
					dos.writeBoolean(this.can_image_variant_1024_be_zoomed);
				}

				// Integer

				writeInteger(this.create_uid, dos);

				// java.util.Date

				writeDate(this.create_date, dos);

				// Integer

				writeInteger(this.write_uid, dos);

				// java.util.Date

				writeDate(this.write_date, dos);

			} catch (IOException e) {
				throw new RuntimeException(e);
			}

		}

		public void writeData(org.jboss.marshalling.Marshaller dos) {
			try {

				// Integer

				writeInteger(this.id, dos);

				// String

				writeString(this.message_main_attachment_id, dos);

				// String

				writeString(this.default_code, dos);

				// Boolean

				if (this.active == null) {
					dos.writeByte(-1);
				} else {
					dos.writeByte(0);
					dos.writeBoolean(this.active);
				}

				// Integer

				writeInteger(this.product_tmpl_id, dos);

				// String

				writeString(this.barcode, dos);

				// String

				writeString(this.combination_indices, dos);

				// String

				writeString(this.volume, dos);

				// String

				writeString(this.weight, dos);

				// Boolean

				if (this.can_image_variant_1024_be_zoomed == null) {
					dos.writeByte(-1);
				} else {
					dos.writeByte(0);
					dos.writeBoolean(this.can_image_variant_1024_be_zoomed);
				}

				// Integer

				writeInteger(this.create_uid, dos);

				// java.util.Date

				writeDate(this.create_date, dos);

				// Integer

				writeInteger(this.write_uid, dos);

				// java.util.Date

				writeDate(this.write_date, dos);

			} catch (IOException e) {
				throw new RuntimeException(e);
			}

		}

		public String toString() {

			StringBuilder sb = new StringBuilder();
			sb.append(super.toString());
			sb.append("[");
			sb.append("id=" + String.valueOf(id));
			sb.append(",message_main_attachment_id=" + message_main_attachment_id);
			sb.append(",default_code=" + default_code);
			sb.append(",active=" + String.valueOf(active));
			sb.append(",product_tmpl_id=" + String.valueOf(product_tmpl_id));
			sb.append(",barcode=" + barcode);
			sb.append(",combination_indices=" + combination_indices);
			sb.append(",volume=" + volume);
			sb.append(",weight=" + weight);
			sb.append(",can_image_variant_1024_be_zoomed=" + String.valueOf(can_image_variant_1024_be_zoomed));
			sb.append(",create_uid=" + String.valueOf(create_uid));
			sb.append(",create_date=" + String.valueOf(create_date));
			sb.append(",write_uid=" + String.valueOf(write_uid));
			sb.append(",write_date=" + String.valueOf(write_date));
			sb.append("]");

			return sb.toString();
		}

		/**
		 * Compare keys
		 */
		public int compareTo(after_tFileInputDelimited_2Struct other) {

			int returnValue = -1;

			return returnValue;
		}

		private int checkNullsAndCompare(Object object1, Object object2) {
			int returnValue = 0;
			if (object1 instanceof Comparable && object2 instanceof Comparable) {
				returnValue = ((Comparable) object1).compareTo(object2);
			} else if (object1 != null && object2 != null) {
				returnValue = compareStrings(object1.toString(), object2.toString());
			} else if (object1 == null && object2 != null) {
				returnValue = 1;
			} else if (object1 != null && object2 == null) {
				returnValue = -1;
			} else {
				returnValue = 0;
			}

			return returnValue;
		}

		private int compareStrings(String string1, String string2) {
			return string1.compareTo(string2);
		}

	}

	public void tFileInputDelimited_2Process(final java.util.Map<String, Object> globalMap) throws TalendException {
		globalMap.put("tFileInputDelimited_2_SUBPROCESS_STATE", 0);

		final boolean execStat = this.execStat;

		String iterateId = "";

		String currentComponent = "";
		java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

		try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { // start the resume
				globalResumeTicket = true;

				tFileInputDelimited_1Process(globalMap);
				tFileInputDelimited_3Process(globalMap);

				productProductStruct productProduct = new productProductStruct();
				DimProductStruct DimProduct = new DimProductStruct();
				DimProductStruct row1 = DimProduct;

				/**
				 * [tFileOutputDelimited_1 begin ] start
				 */

				ok_Hash.put("tFileOutputDelimited_1", false);
				start_Hash.put("tFileOutputDelimited_1", System.currentTimeMillis());

				currentComponent = "tFileOutputDelimited_1";

				if (execStat) {
					runStat.updateStatOnConnection(resourceMap, iterateId, 0, 0, "row1");
				}

				int tos_count_tFileOutputDelimited_1 = 0;

				String fileName_tFileOutputDelimited_1 = "";
				fileName_tFileOutputDelimited_1 = (new java.io.File(
						"C:/Program Files (x86)/TOS_DI-8.0.1/studio/workspace/DimProduct.csv")).getAbsolutePath()
								.replace("\\", "/");
				String fullName_tFileOutputDelimited_1 = null;
				String extension_tFileOutputDelimited_1 = null;
				String directory_tFileOutputDelimited_1 = null;
				if ((fileName_tFileOutputDelimited_1.indexOf("/") != -1)) {
					if (fileName_tFileOutputDelimited_1.lastIndexOf(".") < fileName_tFileOutputDelimited_1
							.lastIndexOf("/")) {
						fullName_tFileOutputDelimited_1 = fileName_tFileOutputDelimited_1;
						extension_tFileOutputDelimited_1 = "";
					} else {
						fullName_tFileOutputDelimited_1 = fileName_tFileOutputDelimited_1.substring(0,
								fileName_tFileOutputDelimited_1.lastIndexOf("."));
						extension_tFileOutputDelimited_1 = fileName_tFileOutputDelimited_1
								.substring(fileName_tFileOutputDelimited_1.lastIndexOf("."));
					}
					directory_tFileOutputDelimited_1 = fileName_tFileOutputDelimited_1.substring(0,
							fileName_tFileOutputDelimited_1.lastIndexOf("/"));
				} else {
					if (fileName_tFileOutputDelimited_1.lastIndexOf(".") != -1) {
						fullName_tFileOutputDelimited_1 = fileName_tFileOutputDelimited_1.substring(0,
								fileName_tFileOutputDelimited_1.lastIndexOf("."));
						extension_tFileOutputDelimited_1 = fileName_tFileOutputDelimited_1
								.substring(fileName_tFileOutputDelimited_1.lastIndexOf("."));
					} else {
						fullName_tFileOutputDelimited_1 = fileName_tFileOutputDelimited_1;
						extension_tFileOutputDelimited_1 = "";
					}
					directory_tFileOutputDelimited_1 = "";
				}
				boolean isFileGenerated_tFileOutputDelimited_1 = true;
				java.io.File filetFileOutputDelimited_1 = new java.io.File(fileName_tFileOutputDelimited_1);
				globalMap.put("tFileOutputDelimited_1_FILE_NAME", fileName_tFileOutputDelimited_1);
				int nb_line_tFileOutputDelimited_1 = 0;
				int splitedFileNo_tFileOutputDelimited_1 = 0;
				int currentRow_tFileOutputDelimited_1 = 0;

				final String OUT_DELIM_tFileOutputDelimited_1 = /** Start field tFileOutputDelimited_1:FIELDSEPARATOR */
						";"/** End field tFileOutputDelimited_1:FIELDSEPARATOR */
				;

				final String OUT_DELIM_ROWSEP_tFileOutputDelimited_1 = /**
																		 * Start field
																		 * tFileOutputDelimited_1:ROWSEPARATOR
																		 */
						"\n"/** End field tFileOutputDelimited_1:ROWSEPARATOR */
				;

				// create directory only if not exists
				if (directory_tFileOutputDelimited_1 != null && directory_tFileOutputDelimited_1.trim().length() != 0) {
					java.io.File dir_tFileOutputDelimited_1 = new java.io.File(directory_tFileOutputDelimited_1);
					if (!dir_tFileOutputDelimited_1.exists()) {
						dir_tFileOutputDelimited_1.mkdirs();
					}
				}

				// routines.system.Row
				java.io.Writer outtFileOutputDelimited_1 = null;

				java.io.File fileToDelete_tFileOutputDelimited_1 = new java.io.File(fileName_tFileOutputDelimited_1);
				if (fileToDelete_tFileOutputDelimited_1.exists()) {
					fileToDelete_tFileOutputDelimited_1.delete();
				}
				outtFileOutputDelimited_1 = new java.io.BufferedWriter(new java.io.OutputStreamWriter(
						new java.io.FileOutputStream(fileName_tFileOutputDelimited_1, false), "ISO-8859-15"));
				if (filetFileOutputDelimited_1.length() == 0) {
					outtFileOutputDelimited_1.write("product_name");
					outtFileOutputDelimited_1.write(OUT_DELIM_tFileOutputDelimited_1);
					outtFileOutputDelimited_1.write("product_description");
					outtFileOutputDelimited_1.write(OUT_DELIM_tFileOutputDelimited_1);
					outtFileOutputDelimited_1.write("category");
					outtFileOutputDelimited_1.write(OUT_DELIM_tFileOutputDelimited_1);
					outtFileOutputDelimited_1.write("category_description");
					outtFileOutputDelimited_1.write(OUT_DELIM_tFileOutputDelimited_1);
					outtFileOutputDelimited_1.write("weight");
					outtFileOutputDelimited_1.write(OUT_DELIM_tFileOutputDelimited_1);
					outtFileOutputDelimited_1.write("volume");
					outtFileOutputDelimited_1.write(OUT_DELIM_tFileOutputDelimited_1);
					outtFileOutputDelimited_1.write("barcode");
					outtFileOutputDelimited_1.write(OUT_DELIM_tFileOutputDelimited_1);
					outtFileOutputDelimited_1.write("product_code");
					outtFileOutputDelimited_1.write(OUT_DELIM_ROWSEP_tFileOutputDelimited_1);
					outtFileOutputDelimited_1.flush();
				}

				resourceMap.put("out_tFileOutputDelimited_1", outtFileOutputDelimited_1);
				resourceMap.put("nb_line_tFileOutputDelimited_1", nb_line_tFileOutputDelimited_1);

				/**
				 * [tFileOutputDelimited_1 begin ] stop
				 */

				/**
				 * [tLogRow_1 begin ] start
				 */

				ok_Hash.put("tLogRow_1", false);
				start_Hash.put("tLogRow_1", System.currentTimeMillis());

				currentComponent = "tLogRow_1";

				if (execStat) {
					runStat.updateStatOnConnection(resourceMap, iterateId, 0, 0, "DimProduct");
				}

				int tos_count_tLogRow_1 = 0;

				///////////////////////

				class Util_tLogRow_1 {

					String[] des_top = { ".", ".", "-", "+" };

					String[] des_head = { "|=", "=|", "-", "+" };

					String[] des_bottom = { "'", "'", "-", "+" };

					String name = "";

					java.util.List<String[]> list = new java.util.ArrayList<String[]>();

					int[] colLengths = new int[8];

					public void addRow(String[] row) {

						for (int i = 0; i < 8; i++) {
							if (row[i] != null) {
								colLengths[i] = Math.max(colLengths[i], row[i].length());
							}
						}
						list.add(row);
					}

					public void setTableName(String name) {

						this.name = name;
					}

					public StringBuilder format() {

						StringBuilder sb = new StringBuilder();

						sb.append(print(des_top));

						int totals = 0;
						for (int i = 0; i < colLengths.length; i++) {
							totals = totals + colLengths[i];
						}

						// name
						sb.append("|");
						int k = 0;
						for (k = 0; k < (totals + 7 - name.length()) / 2; k++) {
							sb.append(' ');
						}
						sb.append(name);
						for (int i = 0; i < totals + 7 - name.length() - k; i++) {
							sb.append(' ');
						}
						sb.append("|\n");

						// head and rows
						sb.append(print(des_head));
						for (int i = 0; i < list.size(); i++) {

							String[] row = list.get(i);

							java.util.Formatter formatter = new java.util.Formatter(new StringBuilder());

							StringBuilder sbformat = new StringBuilder();
							sbformat.append("|%1$-");
							sbformat.append(colLengths[0]);
							sbformat.append("s");

							sbformat.append("|%2$-");
							sbformat.append(colLengths[1]);
							sbformat.append("s");

							sbformat.append("|%3$-");
							sbformat.append(colLengths[2]);
							sbformat.append("s");

							sbformat.append("|%4$-");
							sbformat.append(colLengths[3]);
							sbformat.append("s");

							sbformat.append("|%5$-");
							sbformat.append(colLengths[4]);
							sbformat.append("s");

							sbformat.append("|%6$-");
							sbformat.append(colLengths[5]);
							sbformat.append("s");

							sbformat.append("|%7$-");
							sbformat.append(colLengths[6]);
							sbformat.append("s");

							sbformat.append("|%8$-");
							sbformat.append(colLengths[7]);
							sbformat.append("s");

							sbformat.append("|\n");

							formatter.format(sbformat.toString(), (Object[]) row);

							sb.append(formatter.toString());
							if (i == 0)
								sb.append(print(des_head)); // print the head
						}

						// end
						sb.append(print(des_bottom));
						return sb;
					}

					private StringBuilder print(String[] fillChars) {
						StringBuilder sb = new StringBuilder();
						// first column
						sb.append(fillChars[0]);
						for (int i = 0; i < colLengths[0] - fillChars[0].length() + 1; i++) {
							sb.append(fillChars[2]);
						}
						sb.append(fillChars[3]);

						for (int i = 0; i < colLengths[1] - fillChars[3].length() + 1; i++) {
							sb.append(fillChars[2]);
						}
						sb.append(fillChars[3]);
						for (int i = 0; i < colLengths[2] - fillChars[3].length() + 1; i++) {
							sb.append(fillChars[2]);
						}
						sb.append(fillChars[3]);
						for (int i = 0; i < colLengths[3] - fillChars[3].length() + 1; i++) {
							sb.append(fillChars[2]);
						}
						sb.append(fillChars[3]);
						for (int i = 0; i < colLengths[4] - fillChars[3].length() + 1; i++) {
							sb.append(fillChars[2]);
						}
						sb.append(fillChars[3]);
						for (int i = 0; i < colLengths[5] - fillChars[3].length() + 1; i++) {
							sb.append(fillChars[2]);
						}
						sb.append(fillChars[3]);
						for (int i = 0; i < colLengths[6] - fillChars[3].length() + 1; i++) {
							sb.append(fillChars[2]);
						}
						sb.append(fillChars[3]);

						// last column
						for (int i = 0; i < colLengths[7] - fillChars[1].length() + 1; i++) {
							sb.append(fillChars[2]);
						}
						sb.append(fillChars[1]);
						sb.append("\n");
						return sb;
					}

					public boolean isTableEmpty() {
						if (list.size() > 1)
							return false;
						return true;
					}
				}
				Util_tLogRow_1 util_tLogRow_1 = new Util_tLogRow_1();
				util_tLogRow_1.setTableName("tLogRow_1");
				util_tLogRow_1.addRow(new String[] { "product_name", "product_description", "category",
						"category_description", "weight", "volume", "barcode", "product_code", });
				StringBuilder strBuffer_tLogRow_1 = null;
				int nb_line_tLogRow_1 = 0;
///////////////////////    			

				/**
				 * [tLogRow_1 begin ] stop
				 */

				/**
				 * [tMap_1 begin ] start
				 */

				ok_Hash.put("tMap_1", false);
				start_Hash.put("tMap_1", System.currentTimeMillis());

				currentComponent = "tMap_1";

				if (execStat) {
					runStat.updateStatOnConnection(resourceMap, iterateId, 0, 0, "productProduct");
				}

				int tos_count_tMap_1 = 0;

// ###############################
// # Lookup's keys initialization

				org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<productTemplateStruct> tHash_Lookup_productTemplate = (org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<productTemplateStruct>) ((org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<productTemplateStruct>) globalMap
						.get("tHash_Lookup_productTemplate"));

				productTemplateStruct productTemplateHashKey = new productTemplateStruct();
				productTemplateStruct productTemplateDefault = new productTemplateStruct();

				org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<productCategoryStruct> tHash_Lookup_productCategory = (org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<productCategoryStruct>) ((org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<productCategoryStruct>) globalMap
						.get("tHash_Lookup_productCategory"));

				productCategoryStruct productCategoryHashKey = new productCategoryStruct();
				productCategoryStruct productCategoryDefault = new productCategoryStruct();
// ###############################        

// ###############################
// # Vars initialization
				class Var__tMap_1__Struct {
				}
				Var__tMap_1__Struct Var__tMap_1 = new Var__tMap_1__Struct();
// ###############################

// ###############################
// # Outputs initialization
				DimProductStruct DimProduct_tmp = new DimProductStruct();
// ###############################

				/**
				 * [tMap_1 begin ] stop
				 */

				/**
				 * [tFileInputDelimited_2 begin ] start
				 */

				ok_Hash.put("tFileInputDelimited_2", false);
				start_Hash.put("tFileInputDelimited_2", System.currentTimeMillis());

				currentComponent = "tFileInputDelimited_2";

				int tos_count_tFileInputDelimited_2 = 0;

				final routines.system.RowState rowstate_tFileInputDelimited_2 = new routines.system.RowState();

				int nb_line_tFileInputDelimited_2 = 0;
				org.talend.fileprocess.FileInputDelimited fid_tFileInputDelimited_2 = null;
				int limit_tFileInputDelimited_2 = -1;
				try {

					Object filename_tFileInputDelimited_2 = "C:/Program Files (x86)/TOS_DI-8.0.1/studio/workspace/productProduct.csv";
					if (filename_tFileInputDelimited_2 instanceof java.io.InputStream) {

						int footer_value_tFileInputDelimited_2 = 0, random_value_tFileInputDelimited_2 = -1;
						if (footer_value_tFileInputDelimited_2 > 0 || random_value_tFileInputDelimited_2 > 0) {
							throw new java.lang.Exception(
									"When the input source is a stream,footer and random shouldn't be bigger than 0.");
						}

					}
					try {
						fid_tFileInputDelimited_2 = new org.talend.fileprocess.FileInputDelimited(
								"C:/Program Files (x86)/TOS_DI-8.0.1/studio/workspace/productProduct.csv",
								"ISO-8859-15", ";", "\n", true, 1, 0, limit_tFileInputDelimited_2, -1, false);
					} catch (java.lang.Exception e) {
						globalMap.put("tFileInputDelimited_2_ERROR_MESSAGE", e.getMessage());

						System.err.println(e.getMessage());

					}

					while (fid_tFileInputDelimited_2 != null && fid_tFileInputDelimited_2.nextRecord()) {
						rowstate_tFileInputDelimited_2.reset();

						productProduct = null;

						boolean whetherReject_tFileInputDelimited_2 = false;
						productProduct = new productProductStruct();
						try {

							int columnIndexWithD_tFileInputDelimited_2 = 0;

							String temp = "";

							columnIndexWithD_tFileInputDelimited_2 = 0;

							temp = fid_tFileInputDelimited_2.get(columnIndexWithD_tFileInputDelimited_2);
							if (temp.length() > 0) {

								try {

									productProduct.id = ParserUtils.parseTo_Integer(temp);

								} catch (java.lang.Exception ex_tFileInputDelimited_2) {
									globalMap.put("tFileInputDelimited_2_ERROR_MESSAGE",
											ex_tFileInputDelimited_2.getMessage());
									rowstate_tFileInputDelimited_2.setException(new RuntimeException(String.format(
											"Couldn't parse value for column '%s' in '%s', value is '%s'. Details: %s",
											"id", "productProduct", temp, ex_tFileInputDelimited_2),
											ex_tFileInputDelimited_2));
								}

							} else {

								productProduct.id = null;

							}

							columnIndexWithD_tFileInputDelimited_2 = 1;

							productProduct.message_main_attachment_id = fid_tFileInputDelimited_2
									.get(columnIndexWithD_tFileInputDelimited_2);

							columnIndexWithD_tFileInputDelimited_2 = 2;

							productProduct.default_code = fid_tFileInputDelimited_2
									.get(columnIndexWithD_tFileInputDelimited_2);

							columnIndexWithD_tFileInputDelimited_2 = 3;

							temp = fid_tFileInputDelimited_2.get(columnIndexWithD_tFileInputDelimited_2);
							if (temp.length() > 0) {

								try {

									productProduct.active = ParserUtils.parseTo_Boolean(temp);

								} catch (java.lang.Exception ex_tFileInputDelimited_2) {
									globalMap.put("tFileInputDelimited_2_ERROR_MESSAGE",
											ex_tFileInputDelimited_2.getMessage());
									rowstate_tFileInputDelimited_2.setException(new RuntimeException(String.format(
											"Couldn't parse value for column '%s' in '%s', value is '%s'. Details: %s",
											"active", "productProduct", temp, ex_tFileInputDelimited_2),
											ex_tFileInputDelimited_2));
								}

							} else {

								productProduct.active = null;

							}

							columnIndexWithD_tFileInputDelimited_2 = 4;

							temp = fid_tFileInputDelimited_2.get(columnIndexWithD_tFileInputDelimited_2);
							if (temp.length() > 0) {

								try {

									productProduct.product_tmpl_id = ParserUtils.parseTo_Integer(temp);

								} catch (java.lang.Exception ex_tFileInputDelimited_2) {
									globalMap.put("tFileInputDelimited_2_ERROR_MESSAGE",
											ex_tFileInputDelimited_2.getMessage());
									rowstate_tFileInputDelimited_2.setException(new RuntimeException(String.format(
											"Couldn't parse value for column '%s' in '%s', value is '%s'. Details: %s",
											"product_tmpl_id", "productProduct", temp, ex_tFileInputDelimited_2),
											ex_tFileInputDelimited_2));
								}

							} else {

								productProduct.product_tmpl_id = null;

							}

							columnIndexWithD_tFileInputDelimited_2 = 5;

							productProduct.barcode = fid_tFileInputDelimited_2
									.get(columnIndexWithD_tFileInputDelimited_2);

							columnIndexWithD_tFileInputDelimited_2 = 6;

							productProduct.combination_indices = fid_tFileInputDelimited_2
									.get(columnIndexWithD_tFileInputDelimited_2);

							columnIndexWithD_tFileInputDelimited_2 = 7;

							productProduct.volume = fid_tFileInputDelimited_2
									.get(columnIndexWithD_tFileInputDelimited_2);

							columnIndexWithD_tFileInputDelimited_2 = 8;

							productProduct.weight = fid_tFileInputDelimited_2
									.get(columnIndexWithD_tFileInputDelimited_2);

							columnIndexWithD_tFileInputDelimited_2 = 9;

							temp = fid_tFileInputDelimited_2.get(columnIndexWithD_tFileInputDelimited_2);
							if (temp.length() > 0) {

								try {

									productProduct.can_image_variant_1024_be_zoomed = ParserUtils.parseTo_Boolean(temp);

								} catch (java.lang.Exception ex_tFileInputDelimited_2) {
									globalMap.put("tFileInputDelimited_2_ERROR_MESSAGE",
											ex_tFileInputDelimited_2.getMessage());
									rowstate_tFileInputDelimited_2.setException(new RuntimeException(String.format(
											"Couldn't parse value for column '%s' in '%s', value is '%s'. Details: %s",
											"can_image_variant_1024_be_zoomed", "productProduct", temp,
											ex_tFileInputDelimited_2), ex_tFileInputDelimited_2));
								}

							} else {

								productProduct.can_image_variant_1024_be_zoomed = null;

							}

							columnIndexWithD_tFileInputDelimited_2 = 10;

							temp = fid_tFileInputDelimited_2.get(columnIndexWithD_tFileInputDelimited_2);
							if (temp.length() > 0) {

								try {

									productProduct.create_uid = ParserUtils.parseTo_Integer(temp);

								} catch (java.lang.Exception ex_tFileInputDelimited_2) {
									globalMap.put("tFileInputDelimited_2_ERROR_MESSAGE",
											ex_tFileInputDelimited_2.getMessage());
									rowstate_tFileInputDelimited_2.setException(new RuntimeException(String.format(
											"Couldn't parse value for column '%s' in '%s', value is '%s'. Details: %s",
											"create_uid", "productProduct", temp, ex_tFileInputDelimited_2),
											ex_tFileInputDelimited_2));
								}

							} else {

								productProduct.create_uid = null;

							}

							columnIndexWithD_tFileInputDelimited_2 = 11;

							temp = fid_tFileInputDelimited_2.get(columnIndexWithD_tFileInputDelimited_2);
							if (temp.length() > 0) {

								try {

									productProduct.create_date = ParserUtils.parseTo_Date(temp, "dd-MM-yyyy");

								} catch (java.lang.Exception ex_tFileInputDelimited_2) {
									globalMap.put("tFileInputDelimited_2_ERROR_MESSAGE",
											ex_tFileInputDelimited_2.getMessage());
									rowstate_tFileInputDelimited_2.setException(new RuntimeException(String.format(
											"Couldn't parse value for column '%s' in '%s', value is '%s'. Details: %s",
											"create_date", "productProduct", temp, ex_tFileInputDelimited_2),
											ex_tFileInputDelimited_2));
								}

							} else {

								productProduct.create_date = null;

							}

							columnIndexWithD_tFileInputDelimited_2 = 12;

							temp = fid_tFileInputDelimited_2.get(columnIndexWithD_tFileInputDelimited_2);
							if (temp.length() > 0) {

								try {

									productProduct.write_uid = ParserUtils.parseTo_Integer(temp);

								} catch (java.lang.Exception ex_tFileInputDelimited_2) {
									globalMap.put("tFileInputDelimited_2_ERROR_MESSAGE",
											ex_tFileInputDelimited_2.getMessage());
									rowstate_tFileInputDelimited_2.setException(new RuntimeException(String.format(
											"Couldn't parse value for column '%s' in '%s', value is '%s'. Details: %s",
											"write_uid", "productProduct", temp, ex_tFileInputDelimited_2),
											ex_tFileInputDelimited_2));
								}

							} else {

								productProduct.write_uid = null;

							}

							columnIndexWithD_tFileInputDelimited_2 = 13;

							temp = fid_tFileInputDelimited_2.get(columnIndexWithD_tFileInputDelimited_2);
							if (temp.length() > 0) {

								try {

									productProduct.write_date = ParserUtils.parseTo_Date(temp, "dd-MM-yyyy");

								} catch (java.lang.Exception ex_tFileInputDelimited_2) {
									globalMap.put("tFileInputDelimited_2_ERROR_MESSAGE",
											ex_tFileInputDelimited_2.getMessage());
									rowstate_tFileInputDelimited_2.setException(new RuntimeException(String.format(
											"Couldn't parse value for column '%s' in '%s', value is '%s'. Details: %s",
											"write_date", "productProduct", temp, ex_tFileInputDelimited_2),
											ex_tFileInputDelimited_2));
								}

							} else {

								productProduct.write_date = null;

							}

							if (rowstate_tFileInputDelimited_2.getException() != null) {
								throw rowstate_tFileInputDelimited_2.getException();
							}

						} catch (java.lang.Exception e) {
							globalMap.put("tFileInputDelimited_2_ERROR_MESSAGE", e.getMessage());
							whetherReject_tFileInputDelimited_2 = true;

							System.err.println(e.getMessage());
							productProduct = null;

						}

						/**
						 * [tFileInputDelimited_2 begin ] stop
						 */

						/**
						 * [tFileInputDelimited_2 main ] start
						 */

						currentComponent = "tFileInputDelimited_2";

						tos_count_tFileInputDelimited_2++;

						/**
						 * [tFileInputDelimited_2 main ] stop
						 */

						/**
						 * [tFileInputDelimited_2 process_data_begin ] start
						 */

						currentComponent = "tFileInputDelimited_2";

						/**
						 * [tFileInputDelimited_2 process_data_begin ] stop
						 */
// Start of branch "productProduct"
						if (productProduct != null) {

							/**
							 * [tMap_1 main ] start
							 */

							currentComponent = "tMap_1";

							if (execStat) {
								runStat.updateStatOnConnection(iterateId, 1, 1

										, "productProduct"

								);
							}

							boolean hasCasePrimitiveKeyWithNull_tMap_1 = false;

							// ###############################
							// # Input tables (lookups)
							boolean rejectedInnerJoin_tMap_1 = false;
							boolean mainRowRejected_tMap_1 = false;

							///////////////////////////////////////////////
							// Starting Lookup Table "productTemplate"
							///////////////////////////////////////////////

							boolean forceLoopproductTemplate = false;

							productTemplateStruct productTemplateObjectFromLookup = null;

							if (!rejectedInnerJoin_tMap_1) { // G_TM_M_020

								hasCasePrimitiveKeyWithNull_tMap_1 = false;

								productTemplateHashKey.id = productProduct.product_tmpl_id;

								productTemplateHashKey.hashCodeDirty = true;

								tHash_Lookup_productTemplate.lookup(productTemplateHashKey);

								if (!tHash_Lookup_productTemplate.hasNext()) { // G_TM_M_090

									rejectedInnerJoin_tMap_1 = true;

								} // G_TM_M_090

							} // G_TM_M_020

							if (tHash_Lookup_productTemplate != null
									&& tHash_Lookup_productTemplate.getCount(productTemplateHashKey) > 1) { // G 071

								// System.out.println("WARNING: UNIQUE MATCH is configured for the lookup
								// 'productTemplate' and it contains more one result from keys :
								// productTemplate.id = '" + productTemplateHashKey.id + "'");
							} // G 071

							productTemplateStruct productTemplate = null;

							productTemplateStruct fromLookup_productTemplate = null;
							productTemplate = productTemplateDefault;

							if (tHash_Lookup_productTemplate != null && tHash_Lookup_productTemplate.hasNext()) { // G
																													// 099

								fromLookup_productTemplate = tHash_Lookup_productTemplate.next();

							} // G 099

							if (fromLookup_productTemplate != null) {
								productTemplate = fromLookup_productTemplate;
							}

							///////////////////////////////////////////////
							// Starting Lookup Table "productCategory"
							///////////////////////////////////////////////

							boolean forceLoopproductCategory = false;

							productCategoryStruct productCategoryObjectFromLookup = null;

							if (!rejectedInnerJoin_tMap_1) { // G_TM_M_020

								hasCasePrimitiveKeyWithNull_tMap_1 = false;

								productCategoryHashKey.id = productTemplate.categ_id;

								productCategoryHashKey.hashCodeDirty = true;

								tHash_Lookup_productCategory.lookup(productCategoryHashKey);

								if (!tHash_Lookup_productCategory.hasNext()) { // G_TM_M_090

									rejectedInnerJoin_tMap_1 = true;

								} // G_TM_M_090

							} // G_TM_M_020

							if (tHash_Lookup_productCategory != null
									&& tHash_Lookup_productCategory.getCount(productCategoryHashKey) > 1) { // G 071

								// System.out.println("WARNING: UNIQUE MATCH is configured for the lookup
								// 'productCategory' and it contains more one result from keys :
								// productCategory.id = '" + productCategoryHashKey.id + "'");
							} // G 071

							productCategoryStruct productCategory = null;

							productCategoryStruct fromLookup_productCategory = null;
							productCategory = productCategoryDefault;

							if (tHash_Lookup_productCategory != null && tHash_Lookup_productCategory.hasNext()) { // G
																													// 099

								fromLookup_productCategory = tHash_Lookup_productCategory.next();

							} // G 099

							if (fromLookup_productCategory != null) {
								productCategory = fromLookup_productCategory;
							}

							// ###############################
							{ // start of Var scope

								// ###############################
								// # Vars tables

								Var__tMap_1__Struct Var = Var__tMap_1;// ###############################
								// ###############################
								// # Output tables

								DimProduct = null;

								if (!rejectedInnerJoin_tMap_1) {

// # Output table : 'DimProduct'
									DimProduct_tmp.product_name = productTemplate.name;
									DimProduct_tmp.product_description = productTemplate.description_sale;
									DimProduct_tmp.category = productCategory.name;
									DimProduct_tmp.category_description = productCategory.complete_name;
									DimProduct_tmp.weight = productProduct.weight;
									DimProduct_tmp.volume = productProduct.volume;
									DimProduct_tmp.barcode = productProduct.barcode;
									DimProduct_tmp.product_code = productProduct.default_code;
									DimProduct = DimProduct_tmp;
								} // closing inner join bracket (2)
// ###############################

							} // end of Var scope

							rejectedInnerJoin_tMap_1 = false;

							tos_count_tMap_1++;

							/**
							 * [tMap_1 main ] stop
							 */

							/**
							 * [tMap_1 process_data_begin ] start
							 */

							currentComponent = "tMap_1";

							/**
							 * [tMap_1 process_data_begin ] stop
							 */
// Start of branch "DimProduct"
							if (DimProduct != null) {

								/**
								 * [tLogRow_1 main ] start
								 */

								currentComponent = "tLogRow_1";

								if (execStat) {
									runStat.updateStatOnConnection(iterateId, 1, 1

											, "DimProduct"

									);
								}

///////////////////////		

								String[] row_tLogRow_1 = new String[8];

								if (DimProduct.product_name != null) { //
									row_tLogRow_1[0] = String.valueOf(DimProduct.product_name);

								} //

								if (DimProduct.product_description != null) { //
									row_tLogRow_1[1] = String.valueOf(DimProduct.product_description);

								} //

								if (DimProduct.category != null) { //
									row_tLogRow_1[2] = String.valueOf(DimProduct.category);

								} //

								if (DimProduct.category_description != null) { //
									row_tLogRow_1[3] = String.valueOf(DimProduct.category_description);

								} //

								if (DimProduct.weight != null) { //
									row_tLogRow_1[4] = String.valueOf(DimProduct.weight);

								} //

								if (DimProduct.volume != null) { //
									row_tLogRow_1[5] = String.valueOf(DimProduct.volume);

								} //

								if (DimProduct.barcode != null) { //
									row_tLogRow_1[6] = String.valueOf(DimProduct.barcode);

								} //

								if (DimProduct.product_code != null) { //
									row_tLogRow_1[7] = String.valueOf(DimProduct.product_code);

								} //

								util_tLogRow_1.addRow(row_tLogRow_1);
								nb_line_tLogRow_1++;
//////

//////                    

///////////////////////    			

								row1 = DimProduct;

								tos_count_tLogRow_1++;

								/**
								 * [tLogRow_1 main ] stop
								 */

								/**
								 * [tLogRow_1 process_data_begin ] start
								 */

								currentComponent = "tLogRow_1";

								/**
								 * [tLogRow_1 process_data_begin ] stop
								 */

								/**
								 * [tFileOutputDelimited_1 main ] start
								 */

								currentComponent = "tFileOutputDelimited_1";

								if (execStat) {
									runStat.updateStatOnConnection(iterateId, 1, 1

											, "row1"

									);
								}

								StringBuilder sb_tFileOutputDelimited_1 = new StringBuilder();
								if (row1.product_name != null) {
									sb_tFileOutputDelimited_1.append(row1.product_name);
								}
								sb_tFileOutputDelimited_1.append(OUT_DELIM_tFileOutputDelimited_1);
								if (row1.product_description != null) {
									sb_tFileOutputDelimited_1.append(row1.product_description);
								}
								sb_tFileOutputDelimited_1.append(OUT_DELIM_tFileOutputDelimited_1);
								if (row1.category != null) {
									sb_tFileOutputDelimited_1.append(row1.category);
								}
								sb_tFileOutputDelimited_1.append(OUT_DELIM_tFileOutputDelimited_1);
								if (row1.category_description != null) {
									sb_tFileOutputDelimited_1.append(row1.category_description);
								}
								sb_tFileOutputDelimited_1.append(OUT_DELIM_tFileOutputDelimited_1);
								if (row1.weight != null) {
									sb_tFileOutputDelimited_1.append(row1.weight);
								}
								sb_tFileOutputDelimited_1.append(OUT_DELIM_tFileOutputDelimited_1);
								if (row1.volume != null) {
									sb_tFileOutputDelimited_1.append(row1.volume);
								}
								sb_tFileOutputDelimited_1.append(OUT_DELIM_tFileOutputDelimited_1);
								if (row1.barcode != null) {
									sb_tFileOutputDelimited_1.append(row1.barcode);
								}
								sb_tFileOutputDelimited_1.append(OUT_DELIM_tFileOutputDelimited_1);
								if (row1.product_code != null) {
									sb_tFileOutputDelimited_1.append(row1.product_code);
								}
								sb_tFileOutputDelimited_1.append(OUT_DELIM_ROWSEP_tFileOutputDelimited_1);

								nb_line_tFileOutputDelimited_1++;
								resourceMap.put("nb_line_tFileOutputDelimited_1", nb_line_tFileOutputDelimited_1);

								outtFileOutputDelimited_1.write(sb_tFileOutputDelimited_1.toString());

								tos_count_tFileOutputDelimited_1++;

								/**
								 * [tFileOutputDelimited_1 main ] stop
								 */

								/**
								 * [tFileOutputDelimited_1 process_data_begin ] start
								 */

								currentComponent = "tFileOutputDelimited_1";

								/**
								 * [tFileOutputDelimited_1 process_data_begin ] stop
								 */

								/**
								 * [tFileOutputDelimited_1 process_data_end ] start
								 */

								currentComponent = "tFileOutputDelimited_1";

								/**
								 * [tFileOutputDelimited_1 process_data_end ] stop
								 */

								/**
								 * [tLogRow_1 process_data_end ] start
								 */

								currentComponent = "tLogRow_1";

								/**
								 * [tLogRow_1 process_data_end ] stop
								 */

							} // End of branch "DimProduct"

							/**
							 * [tMap_1 process_data_end ] start
							 */

							currentComponent = "tMap_1";

							/**
							 * [tMap_1 process_data_end ] stop
							 */

						} // End of branch "productProduct"

						/**
						 * [tFileInputDelimited_2 process_data_end ] start
						 */

						currentComponent = "tFileInputDelimited_2";

						/**
						 * [tFileInputDelimited_2 process_data_end ] stop
						 */

						/**
						 * [tFileInputDelimited_2 end ] start
						 */

						currentComponent = "tFileInputDelimited_2";

					}
				} finally {
					if (!((Object) ("C:/Program Files (x86)/TOS_DI-8.0.1/studio/workspace/productProduct.csv") instanceof java.io.InputStream)) {
						if (fid_tFileInputDelimited_2 != null) {
							fid_tFileInputDelimited_2.close();
						}
					}
					if (fid_tFileInputDelimited_2 != null) {
						globalMap.put("tFileInputDelimited_2_NB_LINE", fid_tFileInputDelimited_2.getRowNumber());

					}
				}

				ok_Hash.put("tFileInputDelimited_2", true);
				end_Hash.put("tFileInputDelimited_2", System.currentTimeMillis());

				/**
				 * [tFileInputDelimited_2 end ] stop
				 */

				/**
				 * [tMap_1 end ] start
				 */

				currentComponent = "tMap_1";

// ###############################
// # Lookup hashes releasing
				if (tHash_Lookup_productTemplate != null) {
					tHash_Lookup_productTemplate.endGet();
				}
				globalMap.remove("tHash_Lookup_productTemplate");

				if (tHash_Lookup_productCategory != null) {
					tHash_Lookup_productCategory.endGet();
				}
				globalMap.remove("tHash_Lookup_productCategory");

// ###############################      

				if (execStat) {
					runStat.updateStat(resourceMap, iterateId, 2, 0, "productProduct");
				}

				ok_Hash.put("tMap_1", true);
				end_Hash.put("tMap_1", System.currentTimeMillis());

				/**
				 * [tMap_1 end ] stop
				 */

				/**
				 * [tLogRow_1 end ] start
				 */

				currentComponent = "tLogRow_1";

//////

				java.io.PrintStream consoleOut_tLogRow_1 = null;
				if (globalMap.get("tLogRow_CONSOLE") != null) {
					consoleOut_tLogRow_1 = (java.io.PrintStream) globalMap.get("tLogRow_CONSOLE");
				} else {
					consoleOut_tLogRow_1 = new java.io.PrintStream(new java.io.BufferedOutputStream(System.out));
					globalMap.put("tLogRow_CONSOLE", consoleOut_tLogRow_1);
				}

				consoleOut_tLogRow_1.println(util_tLogRow_1.format().toString());
				consoleOut_tLogRow_1.flush();
//////
				globalMap.put("tLogRow_1_NB_LINE", nb_line_tLogRow_1);

///////////////////////    			

				if (execStat) {
					runStat.updateStat(resourceMap, iterateId, 2, 0, "DimProduct");
				}

				ok_Hash.put("tLogRow_1", true);
				end_Hash.put("tLogRow_1", System.currentTimeMillis());

				/**
				 * [tLogRow_1 end ] stop
				 */

				/**
				 * [tFileOutputDelimited_1 end ] start
				 */

				currentComponent = "tFileOutputDelimited_1";

				if (outtFileOutputDelimited_1 != null) {
					outtFileOutputDelimited_1.flush();
					outtFileOutputDelimited_1.close();
				}

				globalMap.put("tFileOutputDelimited_1_NB_LINE", nb_line_tFileOutputDelimited_1);
				globalMap.put("tFileOutputDelimited_1_FILE_NAME", fileName_tFileOutputDelimited_1);

				resourceMap.put("finish_tFileOutputDelimited_1", true);

				if (execStat) {
					runStat.updateStat(resourceMap, iterateId, 2, 0, "row1");
				}

				ok_Hash.put("tFileOutputDelimited_1", true);
				end_Hash.put("tFileOutputDelimited_1", System.currentTimeMillis());

				if (execStat) {
					runStat.updateStatOnConnection("OnComponentOk1", 0, "ok");
				}
				tS3Connection_1Process(globalMap);

				/**
				 * [tFileOutputDelimited_1 end ] stop
				 */

			} // end the resume

		} catch (java.lang.Exception e) {

			TalendException te = new TalendException(e, currentComponent, globalMap);

			throw te;
		} catch (java.lang.Error error) {

			runStat.stopThreadStat();

			throw error;
		} finally {

			// free memory for "tMap_1"
			globalMap.remove("tHash_Lookup_productCategory");

			// free memory for "tMap_1"
			globalMap.remove("tHash_Lookup_productTemplate");

			try {

				/**
				 * [tFileInputDelimited_2 finally ] start
				 */

				currentComponent = "tFileInputDelimited_2";

				/**
				 * [tFileInputDelimited_2 finally ] stop
				 */

				/**
				 * [tMap_1 finally ] start
				 */

				currentComponent = "tMap_1";

				/**
				 * [tMap_1 finally ] stop
				 */

				/**
				 * [tLogRow_1 finally ] start
				 */

				currentComponent = "tLogRow_1";

				/**
				 * [tLogRow_1 finally ] stop
				 */

				/**
				 * [tFileOutputDelimited_1 finally ] start
				 */

				currentComponent = "tFileOutputDelimited_1";

				if (resourceMap.get("finish_tFileOutputDelimited_1") == null) {

					java.io.Writer outtFileOutputDelimited_1 = (java.io.Writer) resourceMap
							.get("out_tFileOutputDelimited_1");
					if (outtFileOutputDelimited_1 != null) {
						outtFileOutputDelimited_1.flush();
						outtFileOutputDelimited_1.close();
					}

				}

				/**
				 * [tFileOutputDelimited_1 finally ] stop
				 */

			} catch (java.lang.Exception e) {
				// ignore
			} catch (java.lang.Error error) {
				// ignore
			}
			resourceMap = null;
		}

		globalMap.put("tFileInputDelimited_2_SUBPROCESS_STATE", 1);
	}

	public void tS3Connection_1Process(final java.util.Map<String, Object> globalMap) throws TalendException {
		globalMap.put("tS3Connection_1_SUBPROCESS_STATE", 0);

		final boolean execStat = this.execStat;

		String iterateId = "";

		String currentComponent = "";
		java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

		try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { // start the resume
				globalResumeTicket = true;

				/**
				 * [tS3Connection_1 begin ] start
				 */

				ok_Hash.put("tS3Connection_1", false);
				start_Hash.put("tS3Connection_1", System.currentTimeMillis());

				currentComponent = "tS3Connection_1";

				int tos_count_tS3Connection_1 = 0;

				final String decryptedPassword_tS3Connection_1 = routines.system.PasswordEncryptUtil.decryptPassword(
						"enc:routine.encryption.key.v1:MHXkh8u9FCeZUAprRWTmRXjKyxzkab2D0kCyIoDSgbkZp2yaUEtCCYI1l08CCSK+DeUfKPerhz1fErQYc1EqWwBqoI0=");

				com.amazonaws.auth.AWSCredentials credentials_tS3Connection_1 = new com.amazonaws.auth.BasicAWSCredentials(
						"AKIAVMNG53PS4LMU54AJ", decryptedPassword_tS3Connection_1);
				com.amazonaws.auth.AWSCredentialsProvider credentialsProvider_tS3Connection_1 = new com.amazonaws.auth.AWSStaticCredentialsProvider(
						credentials_tS3Connection_1);

				com.amazonaws.ClientConfiguration cc_tS3Connection_1 = new com.amazonaws.ClientConfiguration();
				cc_tS3Connection_1.setUserAgent("APN/1.0 Talend/8.0 Studio/8.0 (Talend Open Studio)");

				com.amazonaws.services.s3.AmazonS3ClientBuilder builder_tS3Connection_1 = com.amazonaws.services.s3.AmazonS3ClientBuilder
						.standard();

				final boolean useRegionEndpoint_tS3Connection_1 = false;
				final String regionEndpoint_tS3Connection_1 = "s3.amazonaws.com";
				final boolean enableAccelerateMode_tS3Connection_1 = false;
				final boolean enablePathStyleAccess_tS3Connection_1 = false;

				if (useRegionEndpoint_tS3Connection_1 && regionEndpoint_tS3Connection_1 != null
						&& !regionEndpoint_tS3Connection_1.isEmpty()) {
					builder_tS3Connection_1
							.withEndpointConfiguration(
									new com.amazonaws.client.builder.AwsClientBuilder.EndpointConfiguration(
											regionEndpoint_tS3Connection_1, null))
							.withForceGlobalBucketAccessEnabled(true);
				} else {
					builder_tS3Connection_1.withRegion("us-east-1") // The first region to try your request against
							.withForceGlobalBucketAccessEnabled(true); // If a bucket is in a different region, try
																		// again in the correct region
				}

				if (enableAccelerateMode_tS3Connection_1) {
					builder_tS3Connection_1.withAccelerateModeEnabled(true);
				}

				builder_tS3Connection_1.withCredentials(credentialsProvider_tS3Connection_1)
						.withClientConfiguration(cc_tS3Connection_1);

				if (useRegionEndpoint_tS3Connection_1 && enablePathStyleAccess_tS3Connection_1) {
					builder_tS3Connection_1.enablePathStyleAccess();
				}

				com.amazonaws.services.s3.AmazonS3 conn_tS3Connection_1 = builder_tS3Connection_1.build();

				// This method is just for test connection.
				conn_tS3Connection_1.getS3AccountOwner();

				globalMap.put("conn_" + "tS3Connection_1", conn_tS3Connection_1);

				/**
				 * [tS3Connection_1 begin ] stop
				 */

				/**
				 * [tS3Connection_1 main ] start
				 */

				currentComponent = "tS3Connection_1";

				tos_count_tS3Connection_1++;

				/**
				 * [tS3Connection_1 main ] stop
				 */

				/**
				 * [tS3Connection_1 process_data_begin ] start
				 */

				currentComponent = "tS3Connection_1";

				/**
				 * [tS3Connection_1 process_data_begin ] stop
				 */

				/**
				 * [tS3Connection_1 process_data_end ] start
				 */

				currentComponent = "tS3Connection_1";

				/**
				 * [tS3Connection_1 process_data_end ] stop
				 */

				/**
				 * [tS3Connection_1 end ] start
				 */

				currentComponent = "tS3Connection_1";

				ok_Hash.put("tS3Connection_1", true);
				end_Hash.put("tS3Connection_1", System.currentTimeMillis());

				if (execStat) {
					runStat.updateStatOnConnection("OnComponentOk2", 0, "ok");
				}
				tS3Put_1Process(globalMap);

				/**
				 * [tS3Connection_1 end ] stop
				 */
			} // end the resume

		} catch (java.lang.Exception e) {

			TalendException te = new TalendException(e, currentComponent, globalMap);

			throw te;
		} catch (java.lang.Error error) {

			runStat.stopThreadStat();

			throw error;
		} finally {

			try {

				/**
				 * [tS3Connection_1 finally ] start
				 */

				currentComponent = "tS3Connection_1";

				/**
				 * [tS3Connection_1 finally ] stop
				 */
			} catch (java.lang.Exception e) {
				// ignore
			} catch (java.lang.Error error) {
				// ignore
			}
			resourceMap = null;
		}

		globalMap.put("tS3Connection_1_SUBPROCESS_STATE", 1);
	}

	public void tS3Put_1Process(final java.util.Map<String, Object> globalMap) throws TalendException {
		globalMap.put("tS3Put_1_SUBPROCESS_STATE", 0);

		final boolean execStat = this.execStat;

		String iterateId = "";

		String currentComponent = "";
		java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

		try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { // start the resume
				globalResumeTicket = true;

				/**
				 * [tS3Put_1 begin ] start
				 */

				ok_Hash.put("tS3Put_1", false);
				start_Hash.put("tS3Put_1", System.currentTimeMillis());

				currentComponent = "tS3Put_1";

				int tos_count_tS3Put_1 = 0;

				String millisecTime_tS3Put_1 = null;

				com.amazonaws.services.s3.AmazonS3Client conn_tS3Put_1 = (com.amazonaws.services.s3.AmazonS3Client) globalMap
						.get("conn_tS3Connection_1");

				String key_tS3Put_1 = "DimProduct.csv";

				int partSizeInBytes_tS3Put_1 = 5 * 1024 * 1024;
				if (partSizeInBytes_tS3Put_1 < 5 << 20) {

					partSizeInBytes_tS3Put_1 = 5 << 20;
				}

				Object fileOrStream_tS3Put_1 = "C:/Program Files (x86)/TOS_DI-8.0.1/studio/workspace/DimProduct.csv";

				boolean useStream_tS3Put_1 = false;
				java.io.InputStream uploadStream_tS3Put_1 = null;

				com.amazonaws.services.s3.transfer.TransferManager tm_tS3Put_1 = null;

				try {

					if (fileOrStream_tS3Put_1 instanceof String) {
						useStream_tS3Put_1 = false;
					} else if (fileOrStream_tS3Put_1 instanceof java.io.InputStream) {
						useStream_tS3Put_1 = true;
					}

					com.amazonaws.services.s3.model.ObjectMetadata objectMetadata_tS3Put_1 = new com.amazonaws.services.s3.model.ObjectMetadata();

					if (!useStream_tS3Put_1) {
						java.io.File inputFile_tS3Put_1 = new java.io.File((String) fileOrStream_tS3Put_1);

						long multipart_upload_threshold_tS3Put_1 = 5 * 1024 * 1024;

						tm_tS3Put_1 = com.amazonaws.services.s3.transfer.TransferManagerBuilder.standard()
								.withMinimumUploadPartSize((long) partSizeInBytes_tS3Put_1)
								.withMultipartUploadThreshold(multipart_upload_threshold_tS3Put_1)
								.withS3Client(conn_tS3Put_1).build();

						com.amazonaws.services.s3.model.PutObjectRequest putRequest_tS3Put_1 = new com.amazonaws.services.s3.model.PutObjectRequest(
								"libreriapacifico/presentation", key_tS3Put_1, inputFile_tS3Put_1)
										.withMetadata(objectMetadata_tS3Put_1);

						com.amazonaws.services.s3.transfer.Upload upload_tS3Put_1 = tm_tS3Put_1
								.upload(putRequest_tS3Put_1);

						upload_tS3Put_1.waitForCompletion();

					} else {
						java.io.InputStream sourceStream_tS3Put_1 = ((java.io.InputStream) fileOrStream_tS3Put_1);

						class S3StreamUtil {
							// read content to buffer as many as possible
							public int readFully(final java.io.InputStream input, final byte[] buffer)
									throws java.io.IOException {
								return readFully(input, buffer, 0, buffer.length);
							}

							public int readFully(final java.io.InputStream input, final byte[] buffer, final int offset,
									final int length) throws java.io.IOException {
								if (length < 0) {
									throw new java.lang.IllegalArgumentException(
											"Length must not be negative: " + length);
								}

								int remaining = length;
								while (remaining > 0) {
									final int location = length - remaining;
									final int count = input.read(buffer, offset + location, remaining);
									if (count == -1) {
										break;
									}
									remaining -= count;
								}
								return length - remaining;
							}
						}

						S3StreamUtil streamUtil_tS3Put_1 = new S3StreamUtil();
						byte[] buffer_tS3Put_1 = new byte[partSizeInBytes_tS3Put_1];
						long curPartSize_tS3Put_1 = streamUtil_tS3Put_1.readFully(sourceStream_tS3Put_1,
								buffer_tS3Put_1);

						boolean multiUpload_tS3Put_1 = curPartSize_tS3Put_1 == partSizeInBytes_tS3Put_1;

						if (!multiUpload_tS3Put_1) {
							objectMetadata_tS3Put_1.setContentLength(curPartSize_tS3Put_1);
							uploadStream_tS3Put_1 = new java.io.ByteArrayInputStream(buffer_tS3Put_1, 0,
									Long.valueOf(curPartSize_tS3Put_1).intValue());
							com.amazonaws.services.s3.model.PutObjectRequest putRequest_tS3Put_1 = new com.amazonaws.services.s3.model.PutObjectRequest(
									"libreriapacifico/presentation", key_tS3Put_1, uploadStream_tS3Put_1,
									objectMetadata_tS3Put_1);

							conn_tS3Put_1.putObject(putRequest_tS3Put_1);
						} else {
							uploadStream_tS3Put_1 = new java.io.ByteArrayInputStream(buffer_tS3Put_1);
							java.util.List<com.amazonaws.services.s3.model.PartETag> partTags_tS3Put_1 = new java.util.ArrayList<com.amazonaws.services.s3.model.PartETag>();
							com.amazonaws.services.s3.model.InitiateMultipartUploadRequest putRequest_tS3Put_1 = new com.amazonaws.services.s3.model.InitiateMultipartUploadRequest(
									"libreriapacifico/presentation", key_tS3Put_1, objectMetadata_tS3Put_1);

							com.amazonaws.services.s3.model.InitiateMultipartUploadResult initResponse_tS3Put_1 = conn_tS3Put_1
									.initiateMultipartUpload(putRequest_tS3Put_1);
							String uploadId_tS3Put_1 = initResponse_tS3Put_1.getUploadId();
							int partNumber_tS3Put_1 = 1;
							boolean streamHasNext_tS3Put_1 = true;
							byte[] probeAvailability_tS3Put_1 = new byte[1];
							try {
								while (streamHasNext_tS3Put_1) {
									com.amazonaws.services.s3.model.UploadPartRequest uploadRequest_tS3Put_1 = new com.amazonaws.services.s3.model.UploadPartRequest()
											.withBucketName("libreriapacifico/presentation").withKey(key_tS3Put_1)
											.withUploadId(uploadId_tS3Put_1).withPartNumber(partNumber_tS3Put_1)
											.withPartSize(curPartSize_tS3Put_1);
									uploadRequest_tS3Put_1.setInputStream(uploadStream_tS3Put_1);
									streamHasNext_tS3Put_1 = (1 == streamUtil_tS3Put_1.readFully(sourceStream_tS3Put_1,
											probeAvailability_tS3Put_1));
									if (!streamHasNext_tS3Put_1) {
										uploadRequest_tS3Put_1.setLastPart(true);
									}

									partTags_tS3Put_1
											.add(conn_tS3Put_1.uploadPart(uploadRequest_tS3Put_1).getPartETag());
									partNumber_tS3Put_1++;

									if (uploadStream_tS3Put_1 != null) {
										uploadStream_tS3Put_1.close();
									}
									buffer_tS3Put_1 = new byte[partSizeInBytes_tS3Put_1];
									curPartSize_tS3Put_1 = 1 + streamUtil_tS3Put_1.readFully(sourceStream_tS3Put_1,
											buffer_tS3Put_1, 1, partSizeInBytes_tS3Put_1 - 1);
									buffer_tS3Put_1[0] = probeAvailability_tS3Put_1[0];
									probeAvailability_tS3Put_1 = new byte[1];
									uploadStream_tS3Put_1 = new java.io.ByteArrayInputStream(buffer_tS3Put_1);
								}

								com.amazonaws.services.s3.model.CompleteMultipartUploadRequest compRequest_tS3Put_1 = new com.amazonaws.services.s3.model.CompleteMultipartUploadRequest(
										"libreriapacifico/presentation", key_tS3Put_1, uploadId_tS3Put_1,
										partTags_tS3Put_1);
								conn_tS3Put_1.completeMultipartUpload(compRequest_tS3Put_1);
							} catch (java.lang.Exception uploadException_tS3Put_1) {
								globalMap.put("tS3Put_1_ERROR_MESSAGE", uploadException_tS3Put_1.getMessage());
								conn_tS3Put_1.abortMultipartUpload(
										new com.amazonaws.services.s3.model.AbortMultipartUploadRequest(
												"libreriapacifico/presentation", key_tS3Put_1, uploadId_tS3Put_1));
								throw uploadException_tS3Put_1;
							}
						}
					}

				} catch (java.lang.Exception e_tS3Put_1) {
					globalMap.put("tS3Put_1_ERROR_MESSAGE", e_tS3Put_1.getMessage());

					System.err.println(e_tS3Put_1.getMessage());

				} finally {
					if (useStream_tS3Put_1 && uploadStream_tS3Put_1 != null) {
						uploadStream_tS3Put_1.close();
					}

					if (tm_tS3Put_1 != null) {
						tm_tS3Put_1.shutdownNow(false);
					}

				}

				/**
				 * [tS3Put_1 begin ] stop
				 */

				/**
				 * [tS3Put_1 main ] start
				 */

				currentComponent = "tS3Put_1";

				tos_count_tS3Put_1++;

				/**
				 * [tS3Put_1 main ] stop
				 */

				/**
				 * [tS3Put_1 process_data_begin ] start
				 */

				currentComponent = "tS3Put_1";

				/**
				 * [tS3Put_1 process_data_begin ] stop
				 */

				/**
				 * [tS3Put_1 process_data_end ] start
				 */

				currentComponent = "tS3Put_1";

				/**
				 * [tS3Put_1 process_data_end ] stop
				 */

				/**
				 * [tS3Put_1 end ] start
				 */

				currentComponent = "tS3Put_1";

				ok_Hash.put("tS3Put_1", true);
				end_Hash.put("tS3Put_1", System.currentTimeMillis());

				/**
				 * [tS3Put_1 end ] stop
				 */
			} // end the resume

		} catch (java.lang.Exception e) {

			TalendException te = new TalendException(e, currentComponent, globalMap);

			throw te;
		} catch (java.lang.Error error) {

			runStat.stopThreadStat();

			throw error;
		} finally {

			try {

				/**
				 * [tS3Put_1 finally ] start
				 */

				currentComponent = "tS3Put_1";

				/**
				 * [tS3Put_1 finally ] stop
				 */
			} catch (java.lang.Exception e) {
				// ignore
			} catch (java.lang.Error error) {
				// ignore
			}
			resourceMap = null;
		}

		globalMap.put("tS3Put_1_SUBPROCESS_STATE", 1);
	}

	public static class productCategoryStruct
			implements routines.system.IPersistableComparableLookupRow<productCategoryStruct> {
		final static byte[] commonByteArrayLock_PACIFICO_productDim = new byte[0];
		static byte[] commonByteArray_PACIFICO_productDim = new byte[0];
		protected static final int DEFAULT_HASHCODE = 1;
		protected static final int PRIME = 31;
		protected int hashCode = DEFAULT_HASHCODE;
		public boolean hashCodeDirty = true;

		public String loopKey;

		public Integer id;

		public Integer getId() {
			return this.id;
		}

		public String name;

		public String getName() {
			return this.name;
		}

		public String complete_name;

		public String getComplete_name() {
			return this.complete_name;
		}

		public String parent_id;

		public String getParent_id() {
			return this.parent_id;
		}

		public String parent_path;

		public String getParent_path() {
			return this.parent_path;
		}

		public Integer create_uid;

		public Integer getCreate_uid() {
			return this.create_uid;
		}

		public java.util.Date create_date;

		public java.util.Date getCreate_date() {
			return this.create_date;
		}

		public Integer write_uid;

		public Integer getWrite_uid() {
			return this.write_uid;
		}

		public java.util.Date write_date;

		public java.util.Date getWrite_date() {
			return this.write_date;
		}

		public String removal_strategy_id;

		public String getRemoval_strategy_id() {
			return this.removal_strategy_id;
		}

		public String packaging_reserve_method;

		public String getPackaging_reserve_method() {
			return this.packaging_reserve_method;
		}

		@Override
		public int hashCode() {
			if (this.hashCodeDirty) {
				final int prime = PRIME;
				int result = DEFAULT_HASHCODE;

				result = prime * result + ((this.id == null) ? 0 : this.id.hashCode());

				this.hashCode = result;
				this.hashCodeDirty = false;
			}
			return this.hashCode;
		}

		@Override
		public boolean equals(Object obj) {
			if (this == obj)
				return true;
			if (obj == null)
				return false;
			if (getClass() != obj.getClass())
				return false;
			final productCategoryStruct other = (productCategoryStruct) obj;

			if (this.id == null) {
				if (other.id != null)
					return false;

			} else if (!this.id.equals(other.id))

				return false;

			return true;
		}

		public void copyDataTo(productCategoryStruct other) {

			other.id = this.id;
			other.name = this.name;
			other.complete_name = this.complete_name;
			other.parent_id = this.parent_id;
			other.parent_path = this.parent_path;
			other.create_uid = this.create_uid;
			other.create_date = this.create_date;
			other.write_uid = this.write_uid;
			other.write_date = this.write_date;
			other.removal_strategy_id = this.removal_strategy_id;
			other.packaging_reserve_method = this.packaging_reserve_method;

		}

		public void copyKeysDataTo(productCategoryStruct other) {

			other.id = this.id;

		}

		private Integer readInteger(ObjectInputStream dis) throws IOException {
			Integer intReturn;
			int length = 0;
			length = dis.readByte();
			if (length == -1) {
				intReturn = null;
			} else {
				intReturn = dis.readInt();
			}
			return intReturn;
		}

		private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException {
			Integer intReturn;
			int length = 0;
			length = dis.readByte();
			if (length == -1) {
				intReturn = null;
			} else {
				intReturn = dis.readInt();
			}
			return intReturn;
		}

		private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException {
			if (intNum == null) {
				dos.writeByte(-1);
			} else {
				dos.writeByte(0);
				dos.writeInt(intNum);
			}
		}

		private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException {
			if (intNum == null) {
				marshaller.writeByte(-1);
			} else {
				marshaller.writeByte(0);
				marshaller.writeInt(intNum);
			}
		}

		private String readString(DataInputStream dis, ObjectInputStream ois) throws IOException {
			String strReturn = null;
			int length = 0;
			length = dis.readInt();
			if (length == -1) {
				strReturn = null;
			} else {
				byte[] byteArray = new byte[length];
				dis.read(byteArray);
				strReturn = new String(byteArray, utf8Charset);
			}
			return strReturn;
		}

		private String readString(DataInputStream dis, org.jboss.marshalling.Unmarshaller unmarshaller)
				throws IOException {
			String strReturn = null;
			int length = 0;
			length = unmarshaller.readInt();
			if (length == -1) {
				strReturn = null;
			} else {
				byte[] byteArray = new byte[length];
				unmarshaller.read(byteArray);
				strReturn = new String(byteArray, utf8Charset);
			}
			return strReturn;
		}

		private void writeString(String str, DataOutputStream dos, org.jboss.marshalling.Marshaller marshaller)
				throws IOException {
			if (str == null) {
				marshaller.writeInt(-1);
			} else {
				byte[] byteArray = str.getBytes(utf8Charset);
				marshaller.writeInt(byteArray.length);
				marshaller.write(byteArray);
			}
		}

		private void writeString(String str, DataOutputStream dos, ObjectOutputStream oos) throws IOException {
			if (str == null) {
				dos.writeInt(-1);
			} else {
				byte[] byteArray = str.getBytes(utf8Charset);
				dos.writeInt(byteArray.length);
				dos.write(byteArray);
			}
		}

		private Integer readInteger(DataInputStream dis, ObjectInputStream ois) throws IOException {
			Integer intReturn;
			int length = 0;
			length = dis.readByte();
			if (length == -1) {
				intReturn = null;
			} else {
				intReturn = dis.readInt();
			}
			return intReturn;
		}

		private Integer readInteger(DataInputStream dis, org.jboss.marshalling.Unmarshaller unmarshaller)
				throws IOException {
			Integer intReturn;
			int length = 0;
			length = unmarshaller.readByte();
			if (length == -1) {
				intReturn = null;
			} else {
				intReturn = unmarshaller.readInt();
			}
			return intReturn;
		}

		private void writeInteger(Integer intNum, DataOutputStream dos, ObjectOutputStream oos) throws IOException {
			if (intNum == null) {
				dos.writeByte(-1);
			} else {
				dos.writeByte(0);
				dos.writeInt(intNum);
			}
		}

		private void writeInteger(Integer intNum, DataOutputStream dos, org.jboss.marshalling.Marshaller marshaller)
				throws IOException {
			if (intNum == null) {
				marshaller.writeByte(-1);
			} else {
				marshaller.writeByte(0);
				marshaller.writeInt(intNum);
			}
		}

		private java.util.Date readDate(DataInputStream dis, ObjectInputStream ois) throws IOException {
			java.util.Date dateReturn = null;
			int length = 0;
			length = dis.readByte();
			if (length == -1) {
				dateReturn = null;
			} else {
				dateReturn = new Date(dis.readLong());
			}
			return dateReturn;
		}

		private java.util.Date readDate(DataInputStream dis, org.jboss.marshalling.Unmarshaller unmarshaller)
				throws IOException {
			java.util.Date dateReturn = null;
			int length = 0;
			length = unmarshaller.readByte();
			if (length == -1) {
				dateReturn = null;
			} else {
				dateReturn = new Date(unmarshaller.readLong());
			}
			return dateReturn;
		}

		private void writeDate(java.util.Date date1, DataOutputStream dos, ObjectOutputStream oos) throws IOException {
			if (date1 == null) {
				dos.writeByte(-1);
			} else {
				dos.writeByte(0);
				dos.writeLong(date1.getTime());
			}
		}

		private void writeDate(java.util.Date date1, DataOutputStream dos, org.jboss.marshalling.Marshaller marshaller)
				throws IOException {
			if (date1 == null) {
				marshaller.writeByte(-1);
			} else {
				marshaller.writeByte(0);
				marshaller.writeLong(date1.getTime());
			}
		}

		public void readKeysData(ObjectInputStream dis) {

			synchronized (commonByteArrayLock_PACIFICO_productDim) {

				try {

					int length = 0;

					this.id = readInteger(dis);

				} catch (IOException e) {
					throw new RuntimeException(e);

				}

			}

		}

		public void readKeysData(org.jboss.marshalling.Unmarshaller dis) {

			synchronized (commonByteArrayLock_PACIFICO_productDim) {

				try {

					int length = 0;

					this.id = readInteger(dis);

				} catch (IOException e) {
					throw new RuntimeException(e);

				}

			}

		}

		public void writeKeysData(ObjectOutputStream dos) {
			try {

				// Integer

				writeInteger(this.id, dos);

			} catch (IOException e) {
				throw new RuntimeException(e);
			}

		}

		public void writeKeysData(org.jboss.marshalling.Marshaller dos) {
			try {

				// Integer

				writeInteger(this.id, dos);

			} catch (IOException e) {
				throw new RuntimeException(e);
			}

		}

		/**
		 * Fill Values data by reading ObjectInputStream.
		 */
		public void readValuesData(DataInputStream dis, ObjectInputStream ois) {
			try {

				int length = 0;

				this.name = readString(dis, ois);

				this.complete_name = readString(dis, ois);

				this.parent_id = readString(dis, ois);

				this.parent_path = readString(dis, ois);

				this.create_uid = readInteger(dis, ois);

				this.create_date = readDate(dis, ois);

				this.write_uid = readInteger(dis, ois);

				this.write_date = readDate(dis, ois);

				this.removal_strategy_id = readString(dis, ois);

				this.packaging_reserve_method = readString(dis, ois);

			} catch (IOException e) {
				throw new RuntimeException(e);

			}

		}

		public void readValuesData(DataInputStream dis, org.jboss.marshalling.Unmarshaller objectIn) {
			try {
				int length = 0;

				this.name = readString(dis, objectIn);

				this.complete_name = readString(dis, objectIn);

				this.parent_id = readString(dis, objectIn);

				this.parent_path = readString(dis, objectIn);

				this.create_uid = readInteger(dis, objectIn);

				this.create_date = readDate(dis, objectIn);

				this.write_uid = readInteger(dis, objectIn);

				this.write_date = readDate(dis, objectIn);

				this.removal_strategy_id = readString(dis, objectIn);

				this.packaging_reserve_method = readString(dis, objectIn);

			} catch (IOException e) {
				throw new RuntimeException(e);

			}

		}

		/**
		 * Return a byte array which represents Values data.
		 */
		public void writeValuesData(DataOutputStream dos, ObjectOutputStream oos) {
			try {

				writeString(this.name, dos, oos);

				writeString(this.complete_name, dos, oos);

				writeString(this.parent_id, dos, oos);

				writeString(this.parent_path, dos, oos);

				writeInteger(this.create_uid, dos, oos);

				writeDate(this.create_date, dos, oos);

				writeInteger(this.write_uid, dos, oos);

				writeDate(this.write_date, dos, oos);

				writeString(this.removal_strategy_id, dos, oos);

				writeString(this.packaging_reserve_method, dos, oos);

			} catch (IOException e) {
				throw new RuntimeException(e);
			}

		}

		public void writeValuesData(DataOutputStream dos, org.jboss.marshalling.Marshaller objectOut) {
			try {

				writeString(this.name, dos, objectOut);

				writeString(this.complete_name, dos, objectOut);

				writeString(this.parent_id, dos, objectOut);

				writeString(this.parent_path, dos, objectOut);

				writeInteger(this.create_uid, dos, objectOut);

				writeDate(this.create_date, dos, objectOut);

				writeInteger(this.write_uid, dos, objectOut);

				writeDate(this.write_date, dos, objectOut);

				writeString(this.removal_strategy_id, dos, objectOut);

				writeString(this.packaging_reserve_method, dos, objectOut);

			} catch (IOException e) {
				throw new RuntimeException(e);
			}
		}

		public boolean supportMarshaller() {
			return true;
		}

		public String toString() {

			StringBuilder sb = new StringBuilder();
			sb.append(super.toString());
			sb.append("[");
			sb.append("id=" + String.valueOf(id));
			sb.append(",name=" + name);
			sb.append(",complete_name=" + complete_name);
			sb.append(",parent_id=" + parent_id);
			sb.append(",parent_path=" + parent_path);
			sb.append(",create_uid=" + String.valueOf(create_uid));
			sb.append(",create_date=" + String.valueOf(create_date));
			sb.append(",write_uid=" + String.valueOf(write_uid));
			sb.append(",write_date=" + String.valueOf(write_date));
			sb.append(",removal_strategy_id=" + removal_strategy_id);
			sb.append(",packaging_reserve_method=" + packaging_reserve_method);
			sb.append("]");

			return sb.toString();
		}

		/**
		 * Compare keys
		 */
		public int compareTo(productCategoryStruct other) {

			int returnValue = -1;

			returnValue = checkNullsAndCompare(this.id, other.id);
			if (returnValue != 0) {
				return returnValue;
			}

			return returnValue;
		}

		private int checkNullsAndCompare(Object object1, Object object2) {
			int returnValue = 0;
			if (object1 instanceof Comparable && object2 instanceof Comparable) {
				returnValue = ((Comparable) object1).compareTo(object2);
			} else if (object1 != null && object2 != null) {
				returnValue = compareStrings(object1.toString(), object2.toString());
			} else if (object1 == null && object2 != null) {
				returnValue = 1;
			} else if (object1 != null && object2 == null) {
				returnValue = -1;
			} else {
				returnValue = 0;
			}

			return returnValue;
		}

		private int compareStrings(String string1, String string2) {
			return string1.compareTo(string2);
		}

	}

	public void tFileInputDelimited_1Process(final java.util.Map<String, Object> globalMap) throws TalendException {
		globalMap.put("tFileInputDelimited_1_SUBPROCESS_STATE", 0);

		final boolean execStat = this.execStat;

		String iterateId = "";

		String currentComponent = "";
		java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

		try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { // start the resume
				globalResumeTicket = true;

				productCategoryStruct productCategory = new productCategoryStruct();

				/**
				 * [tAdvancedHash_productCategory begin ] start
				 */

				ok_Hash.put("tAdvancedHash_productCategory", false);
				start_Hash.put("tAdvancedHash_productCategory", System.currentTimeMillis());

				currentComponent = "tAdvancedHash_productCategory";

				if (execStat) {
					runStat.updateStatOnConnection(resourceMap, iterateId, 0, 0, "productCategory");
				}

				int tos_count_tAdvancedHash_productCategory = 0;

				// connection name:productCategory
				// source node:tFileInputDelimited_1 - inputs:(after_tFileInputDelimited_2)
				// outputs:(productCategory,productCategory) | target
				// node:tAdvancedHash_productCategory - inputs:(productCategory) outputs:()
				// linked node: tMap_1 - inputs:(productProduct,productCategory,productTemplate)
				// outputs:(DimProduct)

				org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE matchingModeEnum_productCategory = org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE.UNIQUE_MATCH;

				org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<productCategoryStruct> tHash_Lookup_productCategory = org.talend.designer.components.lookup.memory.AdvancedMemoryLookup
						.<productCategoryStruct>getLookup(matchingModeEnum_productCategory);

				globalMap.put("tHash_Lookup_productCategory", tHash_Lookup_productCategory);

				/**
				 * [tAdvancedHash_productCategory begin ] stop
				 */

				/**
				 * [tFileInputDelimited_1 begin ] start
				 */

				ok_Hash.put("tFileInputDelimited_1", false);
				start_Hash.put("tFileInputDelimited_1", System.currentTimeMillis());

				currentComponent = "tFileInputDelimited_1";

				int tos_count_tFileInputDelimited_1 = 0;

				final routines.system.RowState rowstate_tFileInputDelimited_1 = new routines.system.RowState();

				int nb_line_tFileInputDelimited_1 = 0;
				org.talend.fileprocess.FileInputDelimited fid_tFileInputDelimited_1 = null;
				int limit_tFileInputDelimited_1 = -1;
				try {

					Object filename_tFileInputDelimited_1 = "C:/Program Files (x86)/TOS_DI-8.0.1/studio/workspace/productCategory.csv";
					if (filename_tFileInputDelimited_1 instanceof java.io.InputStream) {

						int footer_value_tFileInputDelimited_1 = 0, random_value_tFileInputDelimited_1 = -1;
						if (footer_value_tFileInputDelimited_1 > 0 || random_value_tFileInputDelimited_1 > 0) {
							throw new java.lang.Exception(
									"When the input source is a stream,footer and random shouldn't be bigger than 0.");
						}

					}
					try {
						fid_tFileInputDelimited_1 = new org.talend.fileprocess.FileInputDelimited(
								"C:/Program Files (x86)/TOS_DI-8.0.1/studio/workspace/productCategory.csv",
								"ISO-8859-15", ";", "\n", true, 1, 0, limit_tFileInputDelimited_1, -1, false);
					} catch (java.lang.Exception e) {
						globalMap.put("tFileInputDelimited_1_ERROR_MESSAGE", e.getMessage());

						System.err.println(e.getMessage());

					}

					while (fid_tFileInputDelimited_1 != null && fid_tFileInputDelimited_1.nextRecord()) {
						rowstate_tFileInputDelimited_1.reset();

						productCategory = null;

						productCategory = null;

						boolean whetherReject_tFileInputDelimited_1 = false;
						productCategory = new productCategoryStruct();
						try {

							int columnIndexWithD_tFileInputDelimited_1 = 0;

							String temp = "";

							columnIndexWithD_tFileInputDelimited_1 = 0;

							temp = fid_tFileInputDelimited_1.get(columnIndexWithD_tFileInputDelimited_1);
							if (temp.length() > 0) {

								try {

									productCategory.id = ParserUtils.parseTo_Integer(temp);

								} catch (java.lang.Exception ex_tFileInputDelimited_1) {
									globalMap.put("tFileInputDelimited_1_ERROR_MESSAGE",
											ex_tFileInputDelimited_1.getMessage());
									rowstate_tFileInputDelimited_1.setException(new RuntimeException(String.format(
											"Couldn't parse value for column '%s' in '%s', value is '%s'. Details: %s",
											"id", "productCategory", temp, ex_tFileInputDelimited_1),
											ex_tFileInputDelimited_1));
								}

							} else {

								productCategory.id = null;

							}

							columnIndexWithD_tFileInputDelimited_1 = 1;

							productCategory.name = fid_tFileInputDelimited_1
									.get(columnIndexWithD_tFileInputDelimited_1);

							columnIndexWithD_tFileInputDelimited_1 = 2;

							productCategory.complete_name = fid_tFileInputDelimited_1
									.get(columnIndexWithD_tFileInputDelimited_1);

							columnIndexWithD_tFileInputDelimited_1 = 3;

							productCategory.parent_id = fid_tFileInputDelimited_1
									.get(columnIndexWithD_tFileInputDelimited_1);

							columnIndexWithD_tFileInputDelimited_1 = 4;

							productCategory.parent_path = fid_tFileInputDelimited_1
									.get(columnIndexWithD_tFileInputDelimited_1);

							columnIndexWithD_tFileInputDelimited_1 = 5;

							temp = fid_tFileInputDelimited_1.get(columnIndexWithD_tFileInputDelimited_1);
							if (temp.length() > 0) {

								try {

									productCategory.create_uid = ParserUtils.parseTo_Integer(temp);

								} catch (java.lang.Exception ex_tFileInputDelimited_1) {
									globalMap.put("tFileInputDelimited_1_ERROR_MESSAGE",
											ex_tFileInputDelimited_1.getMessage());
									rowstate_tFileInputDelimited_1.setException(new RuntimeException(String.format(
											"Couldn't parse value for column '%s' in '%s', value is '%s'. Details: %s",
											"create_uid", "productCategory", temp, ex_tFileInputDelimited_1),
											ex_tFileInputDelimited_1));
								}

							} else {

								productCategory.create_uid = null;

							}

							columnIndexWithD_tFileInputDelimited_1 = 6;

							temp = fid_tFileInputDelimited_1.get(columnIndexWithD_tFileInputDelimited_1);
							if (temp.length() > 0) {

								try {

									productCategory.create_date = ParserUtils.parseTo_Date(temp, "dd-MM-yyyy");

								} catch (java.lang.Exception ex_tFileInputDelimited_1) {
									globalMap.put("tFileInputDelimited_1_ERROR_MESSAGE",
											ex_tFileInputDelimited_1.getMessage());
									rowstate_tFileInputDelimited_1.setException(new RuntimeException(String.format(
											"Couldn't parse value for column '%s' in '%s', value is '%s'. Details: %s",
											"create_date", "productCategory", temp, ex_tFileInputDelimited_1),
											ex_tFileInputDelimited_1));
								}

							} else {

								productCategory.create_date = null;

							}

							columnIndexWithD_tFileInputDelimited_1 = 7;

							temp = fid_tFileInputDelimited_1.get(columnIndexWithD_tFileInputDelimited_1);
							if (temp.length() > 0) {

								try {

									productCategory.write_uid = ParserUtils.parseTo_Integer(temp);

								} catch (java.lang.Exception ex_tFileInputDelimited_1) {
									globalMap.put("tFileInputDelimited_1_ERROR_MESSAGE",
											ex_tFileInputDelimited_1.getMessage());
									rowstate_tFileInputDelimited_1.setException(new RuntimeException(String.format(
											"Couldn't parse value for column '%s' in '%s', value is '%s'. Details: %s",
											"write_uid", "productCategory", temp, ex_tFileInputDelimited_1),
											ex_tFileInputDelimited_1));
								}

							} else {

								productCategory.write_uid = null;

							}

							columnIndexWithD_tFileInputDelimited_1 = 8;

							temp = fid_tFileInputDelimited_1.get(columnIndexWithD_tFileInputDelimited_1);
							if (temp.length() > 0) {

								try {

									productCategory.write_date = ParserUtils.parseTo_Date(temp, "dd-MM-yyyy");

								} catch (java.lang.Exception ex_tFileInputDelimited_1) {
									globalMap.put("tFileInputDelimited_1_ERROR_MESSAGE",
											ex_tFileInputDelimited_1.getMessage());
									rowstate_tFileInputDelimited_1.setException(new RuntimeException(String.format(
											"Couldn't parse value for column '%s' in '%s', value is '%s'. Details: %s",
											"write_date", "productCategory", temp, ex_tFileInputDelimited_1),
											ex_tFileInputDelimited_1));
								}

							} else {

								productCategory.write_date = null;

							}

							columnIndexWithD_tFileInputDelimited_1 = 9;

							productCategory.removal_strategy_id = fid_tFileInputDelimited_1
									.get(columnIndexWithD_tFileInputDelimited_1);

							columnIndexWithD_tFileInputDelimited_1 = 10;

							productCategory.packaging_reserve_method = fid_tFileInputDelimited_1
									.get(columnIndexWithD_tFileInputDelimited_1);

							if (rowstate_tFileInputDelimited_1.getException() != null) {
								throw rowstate_tFileInputDelimited_1.getException();
							}

						} catch (java.lang.Exception e) {
							globalMap.put("tFileInputDelimited_1_ERROR_MESSAGE", e.getMessage());
							whetherReject_tFileInputDelimited_1 = true;

							System.err.println(e.getMessage());
							productCategory = null;

						}

						/**
						 * [tFileInputDelimited_1 begin ] stop
						 */

						/**
						 * [tFileInputDelimited_1 main ] start
						 */

						currentComponent = "tFileInputDelimited_1";

						tos_count_tFileInputDelimited_1++;

						/**
						 * [tFileInputDelimited_1 main ] stop
						 */

						/**
						 * [tFileInputDelimited_1 process_data_begin ] start
						 */

						currentComponent = "tFileInputDelimited_1";

						/**
						 * [tFileInputDelimited_1 process_data_begin ] stop
						 */
// Start of branch "productCategory"
						if (productCategory != null) {

							/**
							 * [tAdvancedHash_productCategory main ] start
							 */

							currentComponent = "tAdvancedHash_productCategory";

							if (execStat) {
								runStat.updateStatOnConnection(iterateId, 1, 1

										, "productCategory"

								);
							}

							productCategoryStruct productCategory_HashRow = new productCategoryStruct();

							productCategory_HashRow.id = productCategory.id;

							productCategory_HashRow.name = productCategory.name;

							productCategory_HashRow.complete_name = productCategory.complete_name;

							productCategory_HashRow.parent_id = productCategory.parent_id;

							productCategory_HashRow.parent_path = productCategory.parent_path;

							productCategory_HashRow.create_uid = productCategory.create_uid;

							productCategory_HashRow.create_date = productCategory.create_date;

							productCategory_HashRow.write_uid = productCategory.write_uid;

							productCategory_HashRow.write_date = productCategory.write_date;

							productCategory_HashRow.removal_strategy_id = productCategory.removal_strategy_id;

							productCategory_HashRow.packaging_reserve_method = productCategory.packaging_reserve_method;

							tHash_Lookup_productCategory.put(productCategory_HashRow);

							tos_count_tAdvancedHash_productCategory++;

							/**
							 * [tAdvancedHash_productCategory main ] stop
							 */

							/**
							 * [tAdvancedHash_productCategory process_data_begin ] start
							 */

							currentComponent = "tAdvancedHash_productCategory";

							/**
							 * [tAdvancedHash_productCategory process_data_begin ] stop
							 */

							/**
							 * [tAdvancedHash_productCategory process_data_end ] start
							 */

							currentComponent = "tAdvancedHash_productCategory";

							/**
							 * [tAdvancedHash_productCategory process_data_end ] stop
							 */

						} // End of branch "productCategory"

						/**
						 * [tFileInputDelimited_1 process_data_end ] start
						 */

						currentComponent = "tFileInputDelimited_1";

						/**
						 * [tFileInputDelimited_1 process_data_end ] stop
						 */

						/**
						 * [tFileInputDelimited_1 end ] start
						 */

						currentComponent = "tFileInputDelimited_1";

					}
				} finally {
					if (!((Object) ("C:/Program Files (x86)/TOS_DI-8.0.1/studio/workspace/productCategory.csv") instanceof java.io.InputStream)) {
						if (fid_tFileInputDelimited_1 != null) {
							fid_tFileInputDelimited_1.close();
						}
					}
					if (fid_tFileInputDelimited_1 != null) {
						globalMap.put("tFileInputDelimited_1_NB_LINE", fid_tFileInputDelimited_1.getRowNumber());

					}
				}

				ok_Hash.put("tFileInputDelimited_1", true);
				end_Hash.put("tFileInputDelimited_1", System.currentTimeMillis());

				/**
				 * [tFileInputDelimited_1 end ] stop
				 */

				/**
				 * [tAdvancedHash_productCategory end ] start
				 */

				currentComponent = "tAdvancedHash_productCategory";

				tHash_Lookup_productCategory.endPut();

				if (execStat) {
					runStat.updateStat(resourceMap, iterateId, 2, 0, "productCategory");
				}

				ok_Hash.put("tAdvancedHash_productCategory", true);
				end_Hash.put("tAdvancedHash_productCategory", System.currentTimeMillis());

				/**
				 * [tAdvancedHash_productCategory end ] stop
				 */

			} // end the resume

		} catch (java.lang.Exception e) {

			TalendException te = new TalendException(e, currentComponent, globalMap);

			throw te;
		} catch (java.lang.Error error) {

			runStat.stopThreadStat();

			throw error;
		} finally {

			try {

				/**
				 * [tFileInputDelimited_1 finally ] start
				 */

				currentComponent = "tFileInputDelimited_1";

				/**
				 * [tFileInputDelimited_1 finally ] stop
				 */

				/**
				 * [tAdvancedHash_productCategory finally ] start
				 */

				currentComponent = "tAdvancedHash_productCategory";

				/**
				 * [tAdvancedHash_productCategory finally ] stop
				 */

			} catch (java.lang.Exception e) {
				// ignore
			} catch (java.lang.Error error) {
				// ignore
			}
			resourceMap = null;
		}

		globalMap.put("tFileInputDelimited_1_SUBPROCESS_STATE", 1);
	}

	public static class productTemplateStruct
			implements routines.system.IPersistableComparableLookupRow<productTemplateStruct> {
		final static byte[] commonByteArrayLock_PACIFICO_productDim = new byte[0];
		static byte[] commonByteArray_PACIFICO_productDim = new byte[0];
		protected static final int DEFAULT_HASHCODE = 1;
		protected static final int PRIME = 31;
		protected int hashCode = DEFAULT_HASHCODE;
		public boolean hashCodeDirty = true;

		public String loopKey;

		public Integer id;

		public Integer getId() {
			return this.id;
		}

		public String message_main_attachment_id;

		public String getMessage_main_attachment_id() {
			return this.message_main_attachment_id;
		}

		public String name;

		public String getName() {
			return this.name;
		}

		public Integer sequence;

		public Integer getSequence() {
			return this.sequence;
		}

		public String description;

		public String getDescription() {
			return this.description;
		}

		public String description_purchase;

		public String getDescription_purchase() {
			return this.description_purchase;
		}

		public String description_sale;

		public String getDescription_sale() {
			return this.description_sale;
		}

		public String detailed_type;

		public String getDetailed_type() {
			return this.detailed_type;
		}

		public String type;

		public String getType() {
			return this.type;
		}

		public Integer categ_id;

		public Integer getCateg_id() {
			return this.categ_id;
		}

		public Integer list_price;

		public Integer getList_price() {
			return this.list_price;
		}

		public Integer volume;

		public Integer getVolume() {
			return this.volume;
		}

		public Integer weight;

		public Integer getWeight() {
			return this.weight;
		}

		public Boolean sale_ok;

		public Boolean getSale_ok() {
			return this.sale_ok;
		}

		public Boolean purchase_ok;

		public Boolean getPurchase_ok() {
			return this.purchase_ok;
		}

		public Integer uom_id;

		public Integer getUom_id() {
			return this.uom_id;
		}

		public Integer uom_po_id;

		public Integer getUom_po_id() {
			return this.uom_po_id;
		}

		public String company_id;

		public String getCompany_id() {
			return this.company_id;
		}

		public Boolean active;

		public Boolean getActive() {
			return this.active;
		}

		public String color;

		public String getColor() {
			return this.color;
		}

		public String default_code;

		public String getDefault_code() {
			return this.default_code;
		}

		public Boolean can_image_1024_be_zoomed;

		public Boolean getCan_image_1024_be_zoomed() {
			return this.can_image_1024_be_zoomed;
		}

		public Boolean has_configurable_attributes;

		public Boolean getHas_configurable_attributes() {
			return this.has_configurable_attributes;
		}

		public Integer priority;

		public Integer getPriority() {
			return this.priority;
		}

		public Integer create_uid;

		public Integer getCreate_uid() {
			return this.create_uid;
		}

		public java.util.Date create_date;

		public java.util.Date getCreate_date() {
			return this.create_date;
		}

		public Integer write_uid;

		public Integer getWrite_uid() {
			return this.write_uid;
		}

		public java.util.Date write_date;

		public java.util.Date getWrite_date() {
			return this.write_date;
		}

		public String service_type;

		public String getService_type() {
			return this.service_type;
		}

		public String sale_line_warn;

		public String getSale_line_warn() {
			return this.sale_line_warn;
		}

		public String sale_line_warn_msg;

		public String getSale_line_warn_msg() {
			return this.sale_line_warn_msg;
		}

		public String expense_policy;

		public String getExpense_policy() {
			return this.expense_policy;
		}

		public String invoice_policy;

		public String getInvoice_policy() {
			return this.invoice_policy;
		}

		public Float sale_delay;

		public Float getSale_delay() {
			return this.sale_delay;
		}

		public String tracking;

		public String getTracking() {
			return this.tracking;
		}

		public String description_picking;

		public String getDescription_picking() {
			return this.description_picking;
		}

		public String description_pickingout;

		public String getDescription_pickingout() {
			return this.description_pickingout;
		}

		public String description_pickingin;

		public String getDescription_pickingin() {
			return this.description_pickingin;
		}

		public String available_in_pos;

		public String getAvailable_in_pos() {
			return this.available_in_pos;
		}

		public String to_weight;

		public String getTo_weight() {
			return this.to_weight;
		}

		public String pos_categ_id;

		public String getPos_categ_id() {
			return this.pos_categ_id;
		}

		@Override
		public int hashCode() {
			if (this.hashCodeDirty) {
				final int prime = PRIME;
				int result = DEFAULT_HASHCODE;

				result = prime * result + ((this.id == null) ? 0 : this.id.hashCode());

				this.hashCode = result;
				this.hashCodeDirty = false;
			}
			return this.hashCode;
		}

		@Override
		public boolean equals(Object obj) {
			if (this == obj)
				return true;
			if (obj == null)
				return false;
			if (getClass() != obj.getClass())
				return false;
			final productTemplateStruct other = (productTemplateStruct) obj;

			if (this.id == null) {
				if (other.id != null)
					return false;

			} else if (!this.id.equals(other.id))

				return false;

			return true;
		}

		public void copyDataTo(productTemplateStruct other) {

			other.id = this.id;
			other.message_main_attachment_id = this.message_main_attachment_id;
			other.name = this.name;
			other.sequence = this.sequence;
			other.description = this.description;
			other.description_purchase = this.description_purchase;
			other.description_sale = this.description_sale;
			other.detailed_type = this.detailed_type;
			other.type = this.type;
			other.categ_id = this.categ_id;
			other.list_price = this.list_price;
			other.volume = this.volume;
			other.weight = this.weight;
			other.sale_ok = this.sale_ok;
			other.purchase_ok = this.purchase_ok;
			other.uom_id = this.uom_id;
			other.uom_po_id = this.uom_po_id;
			other.company_id = this.company_id;
			other.active = this.active;
			other.color = this.color;
			other.default_code = this.default_code;
			other.can_image_1024_be_zoomed = this.can_image_1024_be_zoomed;
			other.has_configurable_attributes = this.has_configurable_attributes;
			other.priority = this.priority;
			other.create_uid = this.create_uid;
			other.create_date = this.create_date;
			other.write_uid = this.write_uid;
			other.write_date = this.write_date;
			other.service_type = this.service_type;
			other.sale_line_warn = this.sale_line_warn;
			other.sale_line_warn_msg = this.sale_line_warn_msg;
			other.expense_policy = this.expense_policy;
			other.invoice_policy = this.invoice_policy;
			other.sale_delay = this.sale_delay;
			other.tracking = this.tracking;
			other.description_picking = this.description_picking;
			other.description_pickingout = this.description_pickingout;
			other.description_pickingin = this.description_pickingin;
			other.available_in_pos = this.available_in_pos;
			other.to_weight = this.to_weight;
			other.pos_categ_id = this.pos_categ_id;

		}

		public void copyKeysDataTo(productTemplateStruct other) {

			other.id = this.id;

		}

		private Integer readInteger(ObjectInputStream dis) throws IOException {
			Integer intReturn;
			int length = 0;
			length = dis.readByte();
			if (length == -1) {
				intReturn = null;
			} else {
				intReturn = dis.readInt();
			}
			return intReturn;
		}

		private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException {
			Integer intReturn;
			int length = 0;
			length = dis.readByte();
			if (length == -1) {
				intReturn = null;
			} else {
				intReturn = dis.readInt();
			}
			return intReturn;
		}

		private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException {
			if (intNum == null) {
				dos.writeByte(-1);
			} else {
				dos.writeByte(0);
				dos.writeInt(intNum);
			}
		}

		private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException {
			if (intNum == null) {
				marshaller.writeByte(-1);
			} else {
				marshaller.writeByte(0);
				marshaller.writeInt(intNum);
			}
		}

		private String readString(DataInputStream dis, ObjectInputStream ois) throws IOException {
			String strReturn = null;
			int length = 0;
			length = dis.readInt();
			if (length == -1) {
				strReturn = null;
			} else {
				byte[] byteArray = new byte[length];
				dis.read(byteArray);
				strReturn = new String(byteArray, utf8Charset);
			}
			return strReturn;
		}

		private String readString(DataInputStream dis, org.jboss.marshalling.Unmarshaller unmarshaller)
				throws IOException {
			String strReturn = null;
			int length = 0;
			length = unmarshaller.readInt();
			if (length == -1) {
				strReturn = null;
			} else {
				byte[] byteArray = new byte[length];
				unmarshaller.read(byteArray);
				strReturn = new String(byteArray, utf8Charset);
			}
			return strReturn;
		}

		private void writeString(String str, DataOutputStream dos, org.jboss.marshalling.Marshaller marshaller)
				throws IOException {
			if (str == null) {
				marshaller.writeInt(-1);
			} else {
				byte[] byteArray = str.getBytes(utf8Charset);
				marshaller.writeInt(byteArray.length);
				marshaller.write(byteArray);
			}
		}

		private void writeString(String str, DataOutputStream dos, ObjectOutputStream oos) throws IOException {
			if (str == null) {
				dos.writeInt(-1);
			} else {
				byte[] byteArray = str.getBytes(utf8Charset);
				dos.writeInt(byteArray.length);
				dos.write(byteArray);
			}
		}

		private Integer readInteger(DataInputStream dis, ObjectInputStream ois) throws IOException {
			Integer intReturn;
			int length = 0;
			length = dis.readByte();
			if (length == -1) {
				intReturn = null;
			} else {
				intReturn = dis.readInt();
			}
			return intReturn;
		}

		private Integer readInteger(DataInputStream dis, org.jboss.marshalling.Unmarshaller unmarshaller)
				throws IOException {
			Integer intReturn;
			int length = 0;
			length = unmarshaller.readByte();
			if (length == -1) {
				intReturn = null;
			} else {
				intReturn = unmarshaller.readInt();
			}
			return intReturn;
		}

		private void writeInteger(Integer intNum, DataOutputStream dos, ObjectOutputStream oos) throws IOException {
			if (intNum == null) {
				dos.writeByte(-1);
			} else {
				dos.writeByte(0);
				dos.writeInt(intNum);
			}
		}

		private void writeInteger(Integer intNum, DataOutputStream dos, org.jboss.marshalling.Marshaller marshaller)
				throws IOException {
			if (intNum == null) {
				marshaller.writeByte(-1);
			} else {
				marshaller.writeByte(0);
				marshaller.writeInt(intNum);
			}
		}

		private java.util.Date readDate(DataInputStream dis, ObjectInputStream ois) throws IOException {
			java.util.Date dateReturn = null;
			int length = 0;
			length = dis.readByte();
			if (length == -1) {
				dateReturn = null;
			} else {
				dateReturn = new Date(dis.readLong());
			}
			return dateReturn;
		}

		private java.util.Date readDate(DataInputStream dis, org.jboss.marshalling.Unmarshaller unmarshaller)
				throws IOException {
			java.util.Date dateReturn = null;
			int length = 0;
			length = unmarshaller.readByte();
			if (length == -1) {
				dateReturn = null;
			} else {
				dateReturn = new Date(unmarshaller.readLong());
			}
			return dateReturn;
		}

		private void writeDate(java.util.Date date1, DataOutputStream dos, ObjectOutputStream oos) throws IOException {
			if (date1 == null) {
				dos.writeByte(-1);
			} else {
				dos.writeByte(0);
				dos.writeLong(date1.getTime());
			}
		}

		private void writeDate(java.util.Date date1, DataOutputStream dos, org.jboss.marshalling.Marshaller marshaller)
				throws IOException {
			if (date1 == null) {
				marshaller.writeByte(-1);
			} else {
				marshaller.writeByte(0);
				marshaller.writeLong(date1.getTime());
			}
		}

		public void readKeysData(ObjectInputStream dis) {

			synchronized (commonByteArrayLock_PACIFICO_productDim) {

				try {

					int length = 0;

					this.id = readInteger(dis);

				} catch (IOException e) {
					throw new RuntimeException(e);

				}

			}

		}

		public void readKeysData(org.jboss.marshalling.Unmarshaller dis) {

			synchronized (commonByteArrayLock_PACIFICO_productDim) {

				try {

					int length = 0;

					this.id = readInteger(dis);

				} catch (IOException e) {
					throw new RuntimeException(e);

				}

			}

		}

		public void writeKeysData(ObjectOutputStream dos) {
			try {

				// Integer

				writeInteger(this.id, dos);

			} catch (IOException e) {
				throw new RuntimeException(e);
			}

		}

		public void writeKeysData(org.jboss.marshalling.Marshaller dos) {
			try {

				// Integer

				writeInteger(this.id, dos);

			} catch (IOException e) {
				throw new RuntimeException(e);
			}

		}

		/**
		 * Fill Values data by reading ObjectInputStream.
		 */
		public void readValuesData(DataInputStream dis, ObjectInputStream ois) {
			try {

				int length = 0;

				this.message_main_attachment_id = readString(dis, ois);

				this.name = readString(dis, ois);

				this.sequence = readInteger(dis, ois);

				this.description = readString(dis, ois);

				this.description_purchase = readString(dis, ois);

				this.description_sale = readString(dis, ois);

				this.detailed_type = readString(dis, ois);

				this.type = readString(dis, ois);

				this.categ_id = readInteger(dis, ois);

				this.list_price = readInteger(dis, ois);

				this.volume = readInteger(dis, ois);

				this.weight = readInteger(dis, ois);

				length = dis.readByte();
				if (length == -1) {
					this.sale_ok = null;
				} else {
					this.sale_ok = dis.readBoolean();
				}

				length = dis.readByte();
				if (length == -1) {
					this.purchase_ok = null;
				} else {
					this.purchase_ok = dis.readBoolean();
				}

				this.uom_id = readInteger(dis, ois);

				this.uom_po_id = readInteger(dis, ois);

				this.company_id = readString(dis, ois);

				length = dis.readByte();
				if (length == -1) {
					this.active = null;
				} else {
					this.active = dis.readBoolean();
				}

				this.color = readString(dis, ois);

				this.default_code = readString(dis, ois);

				length = dis.readByte();
				if (length == -1) {
					this.can_image_1024_be_zoomed = null;
				} else {
					this.can_image_1024_be_zoomed = dis.readBoolean();
				}

				length = dis.readByte();
				if (length == -1) {
					this.has_configurable_attributes = null;
				} else {
					this.has_configurable_attributes = dis.readBoolean();
				}

				this.priority = readInteger(dis, ois);

				this.create_uid = readInteger(dis, ois);

				this.create_date = readDate(dis, ois);

				this.write_uid = readInteger(dis, ois);

				this.write_date = readDate(dis, ois);

				this.service_type = readString(dis, ois);

				this.sale_line_warn = readString(dis, ois);

				this.sale_line_warn_msg = readString(dis, ois);

				this.expense_policy = readString(dis, ois);

				this.invoice_policy = readString(dis, ois);

				length = dis.readByte();
				if (length == -1) {
					this.sale_delay = null;
				} else {
					this.sale_delay = dis.readFloat();
				}

				this.tracking = readString(dis, ois);

				this.description_picking = readString(dis, ois);

				this.description_pickingout = readString(dis, ois);

				this.description_pickingin = readString(dis, ois);

				this.available_in_pos = readString(dis, ois);

				this.to_weight = readString(dis, ois);

				this.pos_categ_id = readString(dis, ois);

			} catch (IOException e) {
				throw new RuntimeException(e);

			}

		}

		public void readValuesData(DataInputStream dis, org.jboss.marshalling.Unmarshaller objectIn) {
			try {
				int length = 0;

				this.message_main_attachment_id = readString(dis, objectIn);

				this.name = readString(dis, objectIn);

				this.sequence = readInteger(dis, objectIn);

				this.description = readString(dis, objectIn);

				this.description_purchase = readString(dis, objectIn);

				this.description_sale = readString(dis, objectIn);

				this.detailed_type = readString(dis, objectIn);

				this.type = readString(dis, objectIn);

				this.categ_id = readInteger(dis, objectIn);

				this.list_price = readInteger(dis, objectIn);

				this.volume = readInteger(dis, objectIn);

				this.weight = readInteger(dis, objectIn);

				length = objectIn.readByte();
				if (length == -1) {
					this.sale_ok = null;
				} else {
					this.sale_ok = objectIn.readBoolean();
				}

				length = objectIn.readByte();
				if (length == -1) {
					this.purchase_ok = null;
				} else {
					this.purchase_ok = objectIn.readBoolean();
				}

				this.uom_id = readInteger(dis, objectIn);

				this.uom_po_id = readInteger(dis, objectIn);

				this.company_id = readString(dis, objectIn);

				length = objectIn.readByte();
				if (length == -1) {
					this.active = null;
				} else {
					this.active = objectIn.readBoolean();
				}

				this.color = readString(dis, objectIn);

				this.default_code = readString(dis, objectIn);

				length = objectIn.readByte();
				if (length == -1) {
					this.can_image_1024_be_zoomed = null;
				} else {
					this.can_image_1024_be_zoomed = objectIn.readBoolean();
				}

				length = objectIn.readByte();
				if (length == -1) {
					this.has_configurable_attributes = null;
				} else {
					this.has_configurable_attributes = objectIn.readBoolean();
				}

				this.priority = readInteger(dis, objectIn);

				this.create_uid = readInteger(dis, objectIn);

				this.create_date = readDate(dis, objectIn);

				this.write_uid = readInteger(dis, objectIn);

				this.write_date = readDate(dis, objectIn);

				this.service_type = readString(dis, objectIn);

				this.sale_line_warn = readString(dis, objectIn);

				this.sale_line_warn_msg = readString(dis, objectIn);

				this.expense_policy = readString(dis, objectIn);

				this.invoice_policy = readString(dis, objectIn);

				length = objectIn.readByte();
				if (length == -1) {
					this.sale_delay = null;
				} else {
					this.sale_delay = objectIn.readFloat();
				}

				this.tracking = readString(dis, objectIn);

				this.description_picking = readString(dis, objectIn);

				this.description_pickingout = readString(dis, objectIn);

				this.description_pickingin = readString(dis, objectIn);

				this.available_in_pos = readString(dis, objectIn);

				this.to_weight = readString(dis, objectIn);

				this.pos_categ_id = readString(dis, objectIn);

			} catch (IOException e) {
				throw new RuntimeException(e);

			}

		}

		/**
		 * Return a byte array which represents Values data.
		 */
		public void writeValuesData(DataOutputStream dos, ObjectOutputStream oos) {
			try {

				writeString(this.message_main_attachment_id, dos, oos);

				writeString(this.name, dos, oos);

				writeInteger(this.sequence, dos, oos);

				writeString(this.description, dos, oos);

				writeString(this.description_purchase, dos, oos);

				writeString(this.description_sale, dos, oos);

				writeString(this.detailed_type, dos, oos);

				writeString(this.type, dos, oos);

				writeInteger(this.categ_id, dos, oos);

				writeInteger(this.list_price, dos, oos);

				writeInteger(this.volume, dos, oos);

				writeInteger(this.weight, dos, oos);

				if (this.sale_ok == null) {
					dos.writeByte(-1);
				} else {
					dos.writeByte(0);
					dos.writeBoolean(this.sale_ok);
				}

				if (this.purchase_ok == null) {
					dos.writeByte(-1);
				} else {
					dos.writeByte(0);
					dos.writeBoolean(this.purchase_ok);
				}

				writeInteger(this.uom_id, dos, oos);

				writeInteger(this.uom_po_id, dos, oos);

				writeString(this.company_id, dos, oos);

				if (this.active == null) {
					dos.writeByte(-1);
				} else {
					dos.writeByte(0);
					dos.writeBoolean(this.active);
				}

				writeString(this.color, dos, oos);

				writeString(this.default_code, dos, oos);

				if (this.can_image_1024_be_zoomed == null) {
					dos.writeByte(-1);
				} else {
					dos.writeByte(0);
					dos.writeBoolean(this.can_image_1024_be_zoomed);
				}

				if (this.has_configurable_attributes == null) {
					dos.writeByte(-1);
				} else {
					dos.writeByte(0);
					dos.writeBoolean(this.has_configurable_attributes);
				}

				writeInteger(this.priority, dos, oos);

				writeInteger(this.create_uid, dos, oos);

				writeDate(this.create_date, dos, oos);

				writeInteger(this.write_uid, dos, oos);

				writeDate(this.write_date, dos, oos);

				writeString(this.service_type, dos, oos);

				writeString(this.sale_line_warn, dos, oos);

				writeString(this.sale_line_warn_msg, dos, oos);

				writeString(this.expense_policy, dos, oos);

				writeString(this.invoice_policy, dos, oos);

				if (this.sale_delay == null) {
					dos.writeByte(-1);
				} else {
					dos.writeByte(0);
					dos.writeFloat(this.sale_delay);
				}

				writeString(this.tracking, dos, oos);

				writeString(this.description_picking, dos, oos);

				writeString(this.description_pickingout, dos, oos);

				writeString(this.description_pickingin, dos, oos);

				writeString(this.available_in_pos, dos, oos);

				writeString(this.to_weight, dos, oos);

				writeString(this.pos_categ_id, dos, oos);

			} catch (IOException e) {
				throw new RuntimeException(e);
			}

		}

		public void writeValuesData(DataOutputStream dos, org.jboss.marshalling.Marshaller objectOut) {
			try {

				writeString(this.message_main_attachment_id, dos, objectOut);

				writeString(this.name, dos, objectOut);

				writeInteger(this.sequence, dos, objectOut);

				writeString(this.description, dos, objectOut);

				writeString(this.description_purchase, dos, objectOut);

				writeString(this.description_sale, dos, objectOut);

				writeString(this.detailed_type, dos, objectOut);

				writeString(this.type, dos, objectOut);

				writeInteger(this.categ_id, dos, objectOut);

				writeInteger(this.list_price, dos, objectOut);

				writeInteger(this.volume, dos, objectOut);

				writeInteger(this.weight, dos, objectOut);

				if (this.sale_ok == null) {
					objectOut.writeByte(-1);
				} else {
					objectOut.writeByte(0);
					objectOut.writeBoolean(this.sale_ok);
				}

				if (this.purchase_ok == null) {
					objectOut.writeByte(-1);
				} else {
					objectOut.writeByte(0);
					objectOut.writeBoolean(this.purchase_ok);
				}

				writeInteger(this.uom_id, dos, objectOut);

				writeInteger(this.uom_po_id, dos, objectOut);

				writeString(this.company_id, dos, objectOut);

				if (this.active == null) {
					objectOut.writeByte(-1);
				} else {
					objectOut.writeByte(0);
					objectOut.writeBoolean(this.active);
				}

				writeString(this.color, dos, objectOut);

				writeString(this.default_code, dos, objectOut);

				if (this.can_image_1024_be_zoomed == null) {
					objectOut.writeByte(-1);
				} else {
					objectOut.writeByte(0);
					objectOut.writeBoolean(this.can_image_1024_be_zoomed);
				}

				if (this.has_configurable_attributes == null) {
					objectOut.writeByte(-1);
				} else {
					objectOut.writeByte(0);
					objectOut.writeBoolean(this.has_configurable_attributes);
				}

				writeInteger(this.priority, dos, objectOut);

				writeInteger(this.create_uid, dos, objectOut);

				writeDate(this.create_date, dos, objectOut);

				writeInteger(this.write_uid, dos, objectOut);

				writeDate(this.write_date, dos, objectOut);

				writeString(this.service_type, dos, objectOut);

				writeString(this.sale_line_warn, dos, objectOut);

				writeString(this.sale_line_warn_msg, dos, objectOut);

				writeString(this.expense_policy, dos, objectOut);

				writeString(this.invoice_policy, dos, objectOut);

				if (this.sale_delay == null) {
					objectOut.writeByte(-1);
				} else {
					objectOut.writeByte(0);
					objectOut.writeFloat(this.sale_delay);
				}

				writeString(this.tracking, dos, objectOut);

				writeString(this.description_picking, dos, objectOut);

				writeString(this.description_pickingout, dos, objectOut);

				writeString(this.description_pickingin, dos, objectOut);

				writeString(this.available_in_pos, dos, objectOut);

				writeString(this.to_weight, dos, objectOut);

				writeString(this.pos_categ_id, dos, objectOut);

			} catch (IOException e) {
				throw new RuntimeException(e);
			}
		}

		public boolean supportMarshaller() {
			return true;
		}

		public String toString() {

			StringBuilder sb = new StringBuilder();
			sb.append(super.toString());
			sb.append("[");
			sb.append("id=" + String.valueOf(id));
			sb.append(",message_main_attachment_id=" + message_main_attachment_id);
			sb.append(",name=" + name);
			sb.append(",sequence=" + String.valueOf(sequence));
			sb.append(",description=" + description);
			sb.append(",description_purchase=" + description_purchase);
			sb.append(",description_sale=" + description_sale);
			sb.append(",detailed_type=" + detailed_type);
			sb.append(",type=" + type);
			sb.append(",categ_id=" + String.valueOf(categ_id));
			sb.append(",list_price=" + String.valueOf(list_price));
			sb.append(",volume=" + String.valueOf(volume));
			sb.append(",weight=" + String.valueOf(weight));
			sb.append(",sale_ok=" + String.valueOf(sale_ok));
			sb.append(",purchase_ok=" + String.valueOf(purchase_ok));
			sb.append(",uom_id=" + String.valueOf(uom_id));
			sb.append(",uom_po_id=" + String.valueOf(uom_po_id));
			sb.append(",company_id=" + company_id);
			sb.append(",active=" + String.valueOf(active));
			sb.append(",color=" + color);
			sb.append(",default_code=" + default_code);
			sb.append(",can_image_1024_be_zoomed=" + String.valueOf(can_image_1024_be_zoomed));
			sb.append(",has_configurable_attributes=" + String.valueOf(has_configurable_attributes));
			sb.append(",priority=" + String.valueOf(priority));
			sb.append(",create_uid=" + String.valueOf(create_uid));
			sb.append(",create_date=" + String.valueOf(create_date));
			sb.append(",write_uid=" + String.valueOf(write_uid));
			sb.append(",write_date=" + String.valueOf(write_date));
			sb.append(",service_type=" + service_type);
			sb.append(",sale_line_warn=" + sale_line_warn);
			sb.append(",sale_line_warn_msg=" + sale_line_warn_msg);
			sb.append(",expense_policy=" + expense_policy);
			sb.append(",invoice_policy=" + invoice_policy);
			sb.append(",sale_delay=" + String.valueOf(sale_delay));
			sb.append(",tracking=" + tracking);
			sb.append(",description_picking=" + description_picking);
			sb.append(",description_pickingout=" + description_pickingout);
			sb.append(",description_pickingin=" + description_pickingin);
			sb.append(",available_in_pos=" + available_in_pos);
			sb.append(",to_weight=" + to_weight);
			sb.append(",pos_categ_id=" + pos_categ_id);
			sb.append("]");

			return sb.toString();
		}

		/**
		 * Compare keys
		 */
		public int compareTo(productTemplateStruct other) {

			int returnValue = -1;

			returnValue = checkNullsAndCompare(this.id, other.id);
			if (returnValue != 0) {
				return returnValue;
			}

			return returnValue;
		}

		private int checkNullsAndCompare(Object object1, Object object2) {
			int returnValue = 0;
			if (object1 instanceof Comparable && object2 instanceof Comparable) {
				returnValue = ((Comparable) object1).compareTo(object2);
			} else if (object1 != null && object2 != null) {
				returnValue = compareStrings(object1.toString(), object2.toString());
			} else if (object1 == null && object2 != null) {
				returnValue = 1;
			} else if (object1 != null && object2 == null) {
				returnValue = -1;
			} else {
				returnValue = 0;
			}

			return returnValue;
		}

		private int compareStrings(String string1, String string2) {
			return string1.compareTo(string2);
		}

	}

	public void tFileInputDelimited_3Process(final java.util.Map<String, Object> globalMap) throws TalendException {
		globalMap.put("tFileInputDelimited_3_SUBPROCESS_STATE", 0);

		final boolean execStat = this.execStat;

		String iterateId = "";

		String currentComponent = "";
		java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

		try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { // start the resume
				globalResumeTicket = true;

				productTemplateStruct productTemplate = new productTemplateStruct();

				/**
				 * [tAdvancedHash_productTemplate begin ] start
				 */

				ok_Hash.put("tAdvancedHash_productTemplate", false);
				start_Hash.put("tAdvancedHash_productTemplate", System.currentTimeMillis());

				currentComponent = "tAdvancedHash_productTemplate";

				if (execStat) {
					runStat.updateStatOnConnection(resourceMap, iterateId, 0, 0, "productTemplate");
				}

				int tos_count_tAdvancedHash_productTemplate = 0;

				// connection name:productTemplate
				// source node:tFileInputDelimited_3 - inputs:(after_tFileInputDelimited_2)
				// outputs:(productTemplate,productTemplate) | target
				// node:tAdvancedHash_productTemplate - inputs:(productTemplate) outputs:()
				// linked node: tMap_1 - inputs:(productProduct,productCategory,productTemplate)
				// outputs:(DimProduct)

				org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE matchingModeEnum_productTemplate = org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE.UNIQUE_MATCH;

				org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<productTemplateStruct> tHash_Lookup_productTemplate = org.talend.designer.components.lookup.memory.AdvancedMemoryLookup
						.<productTemplateStruct>getLookup(matchingModeEnum_productTemplate);

				globalMap.put("tHash_Lookup_productTemplate", tHash_Lookup_productTemplate);

				/**
				 * [tAdvancedHash_productTemplate begin ] stop
				 */

				/**
				 * [tFileInputDelimited_3 begin ] start
				 */

				ok_Hash.put("tFileInputDelimited_3", false);
				start_Hash.put("tFileInputDelimited_3", System.currentTimeMillis());

				currentComponent = "tFileInputDelimited_3";

				int tos_count_tFileInputDelimited_3 = 0;

				final routines.system.RowState rowstate_tFileInputDelimited_3 = new routines.system.RowState();

				int nb_line_tFileInputDelimited_3 = 0;
				org.talend.fileprocess.FileInputDelimited fid_tFileInputDelimited_3 = null;
				int limit_tFileInputDelimited_3 = -1;
				try {

					Object filename_tFileInputDelimited_3 = "C:/Program Files (x86)/TOS_DI-8.0.1/studio/workspace/productTemplate.csv";
					if (filename_tFileInputDelimited_3 instanceof java.io.InputStream) {

						int footer_value_tFileInputDelimited_3 = 0, random_value_tFileInputDelimited_3 = -1;
						if (footer_value_tFileInputDelimited_3 > 0 || random_value_tFileInputDelimited_3 > 0) {
							throw new java.lang.Exception(
									"When the input source is a stream,footer and random shouldn't be bigger than 0.");
						}

					}
					try {
						fid_tFileInputDelimited_3 = new org.talend.fileprocess.FileInputDelimited(
								"C:/Program Files (x86)/TOS_DI-8.0.1/studio/workspace/productTemplate.csv",
								"ISO-8859-15", ";", "\n", true, 1, 0, limit_tFileInputDelimited_3, -1, false);
					} catch (java.lang.Exception e) {
						globalMap.put("tFileInputDelimited_3_ERROR_MESSAGE", e.getMessage());

						System.err.println(e.getMessage());

					}

					while (fid_tFileInputDelimited_3 != null && fid_tFileInputDelimited_3.nextRecord()) {
						rowstate_tFileInputDelimited_3.reset();

						productTemplate = null;

						productTemplate = null;

						boolean whetherReject_tFileInputDelimited_3 = false;
						productTemplate = new productTemplateStruct();
						try {

							int columnIndexWithD_tFileInputDelimited_3 = 0;

							String temp = "";

							columnIndexWithD_tFileInputDelimited_3 = 0;

							temp = fid_tFileInputDelimited_3.get(columnIndexWithD_tFileInputDelimited_3);
							if (temp.length() > 0) {

								try {

									productTemplate.id = ParserUtils.parseTo_Integer(temp);

								} catch (java.lang.Exception ex_tFileInputDelimited_3) {
									globalMap.put("tFileInputDelimited_3_ERROR_MESSAGE",
											ex_tFileInputDelimited_3.getMessage());
									rowstate_tFileInputDelimited_3.setException(new RuntimeException(String.format(
											"Couldn't parse value for column '%s' in '%s', value is '%s'. Details: %s",
											"id", "productTemplate", temp, ex_tFileInputDelimited_3),
											ex_tFileInputDelimited_3));
								}

							} else {

								productTemplate.id = null;

							}

							columnIndexWithD_tFileInputDelimited_3 = 1;

							productTemplate.message_main_attachment_id = fid_tFileInputDelimited_3
									.get(columnIndexWithD_tFileInputDelimited_3);

							columnIndexWithD_tFileInputDelimited_3 = 2;

							productTemplate.name = fid_tFileInputDelimited_3
									.get(columnIndexWithD_tFileInputDelimited_3);

							columnIndexWithD_tFileInputDelimited_3 = 3;

							temp = fid_tFileInputDelimited_3.get(columnIndexWithD_tFileInputDelimited_3);
							if (temp.length() > 0) {

								try {

									productTemplate.sequence = ParserUtils.parseTo_Integer(temp);

								} catch (java.lang.Exception ex_tFileInputDelimited_3) {
									globalMap.put("tFileInputDelimited_3_ERROR_MESSAGE",
											ex_tFileInputDelimited_3.getMessage());
									rowstate_tFileInputDelimited_3.setException(new RuntimeException(String.format(
											"Couldn't parse value for column '%s' in '%s', value is '%s'. Details: %s",
											"sequence", "productTemplate", temp, ex_tFileInputDelimited_3),
											ex_tFileInputDelimited_3));
								}

							} else {

								productTemplate.sequence = null;

							}

							columnIndexWithD_tFileInputDelimited_3 = 4;

							productTemplate.description = fid_tFileInputDelimited_3
									.get(columnIndexWithD_tFileInputDelimited_3);

							columnIndexWithD_tFileInputDelimited_3 = 5;

							productTemplate.description_purchase = fid_tFileInputDelimited_3
									.get(columnIndexWithD_tFileInputDelimited_3);

							columnIndexWithD_tFileInputDelimited_3 = 6;

							productTemplate.description_sale = fid_tFileInputDelimited_3
									.get(columnIndexWithD_tFileInputDelimited_3);

							columnIndexWithD_tFileInputDelimited_3 = 7;

							productTemplate.detailed_type = fid_tFileInputDelimited_3
									.get(columnIndexWithD_tFileInputDelimited_3);

							columnIndexWithD_tFileInputDelimited_3 = 8;

							productTemplate.type = fid_tFileInputDelimited_3
									.get(columnIndexWithD_tFileInputDelimited_3);

							columnIndexWithD_tFileInputDelimited_3 = 9;

							temp = fid_tFileInputDelimited_3.get(columnIndexWithD_tFileInputDelimited_3);
							if (temp.length() > 0) {

								try {

									productTemplate.categ_id = ParserUtils.parseTo_Integer(temp);

								} catch (java.lang.Exception ex_tFileInputDelimited_3) {
									globalMap.put("tFileInputDelimited_3_ERROR_MESSAGE",
											ex_tFileInputDelimited_3.getMessage());
									rowstate_tFileInputDelimited_3.setException(new RuntimeException(String.format(
											"Couldn't parse value for column '%s' in '%s', value is '%s'. Details: %s",
											"categ_id", "productTemplate", temp, ex_tFileInputDelimited_3),
											ex_tFileInputDelimited_3));
								}

							} else {

								productTemplate.categ_id = null;

							}

							columnIndexWithD_tFileInputDelimited_3 = 10;

							temp = fid_tFileInputDelimited_3.get(columnIndexWithD_tFileInputDelimited_3);
							if (temp.length() > 0) {

								try {

									productTemplate.list_price = ParserUtils.parseTo_Integer(temp);

								} catch (java.lang.Exception ex_tFileInputDelimited_3) {
									globalMap.put("tFileInputDelimited_3_ERROR_MESSAGE",
											ex_tFileInputDelimited_3.getMessage());
									rowstate_tFileInputDelimited_3.setException(new RuntimeException(String.format(
											"Couldn't parse value for column '%s' in '%s', value is '%s'. Details: %s",
											"list_price", "productTemplate", temp, ex_tFileInputDelimited_3),
											ex_tFileInputDelimited_3));
								}

							} else {

								productTemplate.list_price = null;

							}

							columnIndexWithD_tFileInputDelimited_3 = 11;

							temp = fid_tFileInputDelimited_3.get(columnIndexWithD_tFileInputDelimited_3);
							if (temp.length() > 0) {

								try {

									productTemplate.volume = ParserUtils.parseTo_Integer(temp);

								} catch (java.lang.Exception ex_tFileInputDelimited_3) {
									globalMap.put("tFileInputDelimited_3_ERROR_MESSAGE",
											ex_tFileInputDelimited_3.getMessage());
									rowstate_tFileInputDelimited_3.setException(new RuntimeException(String.format(
											"Couldn't parse value for column '%s' in '%s', value is '%s'. Details: %s",
											"volume", "productTemplate", temp, ex_tFileInputDelimited_3),
											ex_tFileInputDelimited_3));
								}

							} else {

								productTemplate.volume = null;

							}

							columnIndexWithD_tFileInputDelimited_3 = 12;

							temp = fid_tFileInputDelimited_3.get(columnIndexWithD_tFileInputDelimited_3);
							if (temp.length() > 0) {

								try {

									productTemplate.weight = ParserUtils.parseTo_Integer(temp);

								} catch (java.lang.Exception ex_tFileInputDelimited_3) {
									globalMap.put("tFileInputDelimited_3_ERROR_MESSAGE",
											ex_tFileInputDelimited_3.getMessage());
									rowstate_tFileInputDelimited_3.setException(new RuntimeException(String.format(
											"Couldn't parse value for column '%s' in '%s', value is '%s'. Details: %s",
											"weight", "productTemplate", temp, ex_tFileInputDelimited_3),
											ex_tFileInputDelimited_3));
								}

							} else {

								productTemplate.weight = null;

							}

							columnIndexWithD_tFileInputDelimited_3 = 13;

							temp = fid_tFileInputDelimited_3.get(columnIndexWithD_tFileInputDelimited_3);
							if (temp.length() > 0) {

								try {

									productTemplate.sale_ok = ParserUtils.parseTo_Boolean(temp);

								} catch (java.lang.Exception ex_tFileInputDelimited_3) {
									globalMap.put("tFileInputDelimited_3_ERROR_MESSAGE",
											ex_tFileInputDelimited_3.getMessage());
									rowstate_tFileInputDelimited_3.setException(new RuntimeException(String.format(
											"Couldn't parse value for column '%s' in '%s', value is '%s'. Details: %s",
											"sale_ok", "productTemplate", temp, ex_tFileInputDelimited_3),
											ex_tFileInputDelimited_3));
								}

							} else {

								productTemplate.sale_ok = null;

							}

							columnIndexWithD_tFileInputDelimited_3 = 14;

							temp = fid_tFileInputDelimited_3.get(columnIndexWithD_tFileInputDelimited_3);
							if (temp.length() > 0) {

								try {

									productTemplate.purchase_ok = ParserUtils.parseTo_Boolean(temp);

								} catch (java.lang.Exception ex_tFileInputDelimited_3) {
									globalMap.put("tFileInputDelimited_3_ERROR_MESSAGE",
											ex_tFileInputDelimited_3.getMessage());
									rowstate_tFileInputDelimited_3.setException(new RuntimeException(String.format(
											"Couldn't parse value for column '%s' in '%s', value is '%s'. Details: %s",
											"purchase_ok", "productTemplate", temp, ex_tFileInputDelimited_3),
											ex_tFileInputDelimited_3));
								}

							} else {

								productTemplate.purchase_ok = null;

							}

							columnIndexWithD_tFileInputDelimited_3 = 15;

							temp = fid_tFileInputDelimited_3.get(columnIndexWithD_tFileInputDelimited_3);
							if (temp.length() > 0) {

								try {

									productTemplate.uom_id = ParserUtils.parseTo_Integer(temp);

								} catch (java.lang.Exception ex_tFileInputDelimited_3) {
									globalMap.put("tFileInputDelimited_3_ERROR_MESSAGE",
											ex_tFileInputDelimited_3.getMessage());
									rowstate_tFileInputDelimited_3.setException(new RuntimeException(String.format(
											"Couldn't parse value for column '%s' in '%s', value is '%s'. Details: %s",
											"uom_id", "productTemplate", temp, ex_tFileInputDelimited_3),
											ex_tFileInputDelimited_3));
								}

							} else {

								productTemplate.uom_id = null;

							}

							columnIndexWithD_tFileInputDelimited_3 = 16;

							temp = fid_tFileInputDelimited_3.get(columnIndexWithD_tFileInputDelimited_3);
							if (temp.length() > 0) {

								try {

									productTemplate.uom_po_id = ParserUtils.parseTo_Integer(temp);

								} catch (java.lang.Exception ex_tFileInputDelimited_3) {
									globalMap.put("tFileInputDelimited_3_ERROR_MESSAGE",
											ex_tFileInputDelimited_3.getMessage());
									rowstate_tFileInputDelimited_3.setException(new RuntimeException(String.format(
											"Couldn't parse value for column '%s' in '%s', value is '%s'. Details: %s",
											"uom_po_id", "productTemplate", temp, ex_tFileInputDelimited_3),
											ex_tFileInputDelimited_3));
								}

							} else {

								productTemplate.uom_po_id = null;

							}

							columnIndexWithD_tFileInputDelimited_3 = 17;

							productTemplate.company_id = fid_tFileInputDelimited_3
									.get(columnIndexWithD_tFileInputDelimited_3);

							columnIndexWithD_tFileInputDelimited_3 = 18;

							temp = fid_tFileInputDelimited_3.get(columnIndexWithD_tFileInputDelimited_3);
							if (temp.length() > 0) {

								try {

									productTemplate.active = ParserUtils.parseTo_Boolean(temp);

								} catch (java.lang.Exception ex_tFileInputDelimited_3) {
									globalMap.put("tFileInputDelimited_3_ERROR_MESSAGE",
											ex_tFileInputDelimited_3.getMessage());
									rowstate_tFileInputDelimited_3.setException(new RuntimeException(String.format(
											"Couldn't parse value for column '%s' in '%s', value is '%s'. Details: %s",
											"active", "productTemplate", temp, ex_tFileInputDelimited_3),
											ex_tFileInputDelimited_3));
								}

							} else {

								productTemplate.active = null;

							}

							columnIndexWithD_tFileInputDelimited_3 = 19;

							productTemplate.color = fid_tFileInputDelimited_3
									.get(columnIndexWithD_tFileInputDelimited_3);

							columnIndexWithD_tFileInputDelimited_3 = 20;

							productTemplate.default_code = fid_tFileInputDelimited_3
									.get(columnIndexWithD_tFileInputDelimited_3);

							columnIndexWithD_tFileInputDelimited_3 = 21;

							temp = fid_tFileInputDelimited_3.get(columnIndexWithD_tFileInputDelimited_3);
							if (temp.length() > 0) {

								try {

									productTemplate.can_image_1024_be_zoomed = ParserUtils.parseTo_Boolean(temp);

								} catch (java.lang.Exception ex_tFileInputDelimited_3) {
									globalMap.put("tFileInputDelimited_3_ERROR_MESSAGE",
											ex_tFileInputDelimited_3.getMessage());
									rowstate_tFileInputDelimited_3.setException(new RuntimeException(String.format(
											"Couldn't parse value for column '%s' in '%s', value is '%s'. Details: %s",
											"can_image_1024_be_zoomed", "productTemplate", temp,
											ex_tFileInputDelimited_3), ex_tFileInputDelimited_3));
								}

							} else {

								productTemplate.can_image_1024_be_zoomed = null;

							}

							columnIndexWithD_tFileInputDelimited_3 = 22;

							temp = fid_tFileInputDelimited_3.get(columnIndexWithD_tFileInputDelimited_3);
							if (temp.length() > 0) {

								try {

									productTemplate.has_configurable_attributes = ParserUtils.parseTo_Boolean(temp);

								} catch (java.lang.Exception ex_tFileInputDelimited_3) {
									globalMap.put("tFileInputDelimited_3_ERROR_MESSAGE",
											ex_tFileInputDelimited_3.getMessage());
									rowstate_tFileInputDelimited_3.setException(new RuntimeException(String.format(
											"Couldn't parse value for column '%s' in '%s', value is '%s'. Details: %s",
											"has_configurable_attributes", "productTemplate", temp,
											ex_tFileInputDelimited_3), ex_tFileInputDelimited_3));
								}

							} else {

								productTemplate.has_configurable_attributes = null;

							}

							columnIndexWithD_tFileInputDelimited_3 = 23;

							temp = fid_tFileInputDelimited_3.get(columnIndexWithD_tFileInputDelimited_3);
							if (temp.length() > 0) {

								try {

									productTemplate.priority = ParserUtils.parseTo_Integer(temp);

								} catch (java.lang.Exception ex_tFileInputDelimited_3) {
									globalMap.put("tFileInputDelimited_3_ERROR_MESSAGE",
											ex_tFileInputDelimited_3.getMessage());
									rowstate_tFileInputDelimited_3.setException(new RuntimeException(String.format(
											"Couldn't parse value for column '%s' in '%s', value is '%s'. Details: %s",
											"priority", "productTemplate", temp, ex_tFileInputDelimited_3),
											ex_tFileInputDelimited_3));
								}

							} else {

								productTemplate.priority = null;

							}

							columnIndexWithD_tFileInputDelimited_3 = 24;

							temp = fid_tFileInputDelimited_3.get(columnIndexWithD_tFileInputDelimited_3);
							if (temp.length() > 0) {

								try {

									productTemplate.create_uid = ParserUtils.parseTo_Integer(temp);

								} catch (java.lang.Exception ex_tFileInputDelimited_3) {
									globalMap.put("tFileInputDelimited_3_ERROR_MESSAGE",
											ex_tFileInputDelimited_3.getMessage());
									rowstate_tFileInputDelimited_3.setException(new RuntimeException(String.format(
											"Couldn't parse value for column '%s' in '%s', value is '%s'. Details: %s",
											"create_uid", "productTemplate", temp, ex_tFileInputDelimited_3),
											ex_tFileInputDelimited_3));
								}

							} else {

								productTemplate.create_uid = null;

							}

							columnIndexWithD_tFileInputDelimited_3 = 25;

							temp = fid_tFileInputDelimited_3.get(columnIndexWithD_tFileInputDelimited_3);
							if (temp.length() > 0) {

								try {

									productTemplate.create_date = ParserUtils.parseTo_Date(temp, "dd-MM-yyyy");

								} catch (java.lang.Exception ex_tFileInputDelimited_3) {
									globalMap.put("tFileInputDelimited_3_ERROR_MESSAGE",
											ex_tFileInputDelimited_3.getMessage());
									rowstate_tFileInputDelimited_3.setException(new RuntimeException(String.format(
											"Couldn't parse value for column '%s' in '%s', value is '%s'. Details: %s",
											"create_date", "productTemplate", temp, ex_tFileInputDelimited_3),
											ex_tFileInputDelimited_3));
								}

							} else {

								productTemplate.create_date = null;

							}

							columnIndexWithD_tFileInputDelimited_3 = 26;

							temp = fid_tFileInputDelimited_3.get(columnIndexWithD_tFileInputDelimited_3);
							if (temp.length() > 0) {

								try {

									productTemplate.write_uid = ParserUtils.parseTo_Integer(temp);

								} catch (java.lang.Exception ex_tFileInputDelimited_3) {
									globalMap.put("tFileInputDelimited_3_ERROR_MESSAGE",
											ex_tFileInputDelimited_3.getMessage());
									rowstate_tFileInputDelimited_3.setException(new RuntimeException(String.format(
											"Couldn't parse value for column '%s' in '%s', value is '%s'. Details: %s",
											"write_uid", "productTemplate", temp, ex_tFileInputDelimited_3),
											ex_tFileInputDelimited_3));
								}

							} else {

								productTemplate.write_uid = null;

							}

							columnIndexWithD_tFileInputDelimited_3 = 27;

							temp = fid_tFileInputDelimited_3.get(columnIndexWithD_tFileInputDelimited_3);
							if (temp.length() > 0) {

								try {

									productTemplate.write_date = ParserUtils.parseTo_Date(temp, "dd-MM-yyyy");

								} catch (java.lang.Exception ex_tFileInputDelimited_3) {
									globalMap.put("tFileInputDelimited_3_ERROR_MESSAGE",
											ex_tFileInputDelimited_3.getMessage());
									rowstate_tFileInputDelimited_3.setException(new RuntimeException(String.format(
											"Couldn't parse value for column '%s' in '%s', value is '%s'. Details: %s",
											"write_date", "productTemplate", temp, ex_tFileInputDelimited_3),
											ex_tFileInputDelimited_3));
								}

							} else {

								productTemplate.write_date = null;

							}

							columnIndexWithD_tFileInputDelimited_3 = 28;

							productTemplate.service_type = fid_tFileInputDelimited_3
									.get(columnIndexWithD_tFileInputDelimited_3);

							columnIndexWithD_tFileInputDelimited_3 = 29;

							productTemplate.sale_line_warn = fid_tFileInputDelimited_3
									.get(columnIndexWithD_tFileInputDelimited_3);

							columnIndexWithD_tFileInputDelimited_3 = 30;

							productTemplate.sale_line_warn_msg = fid_tFileInputDelimited_3
									.get(columnIndexWithD_tFileInputDelimited_3);

							columnIndexWithD_tFileInputDelimited_3 = 31;

							productTemplate.expense_policy = fid_tFileInputDelimited_3
									.get(columnIndexWithD_tFileInputDelimited_3);

							columnIndexWithD_tFileInputDelimited_3 = 32;

							productTemplate.invoice_policy = fid_tFileInputDelimited_3
									.get(columnIndexWithD_tFileInputDelimited_3);

							columnIndexWithD_tFileInputDelimited_3 = 33;

							temp = fid_tFileInputDelimited_3.get(columnIndexWithD_tFileInputDelimited_3);
							if (temp.length() > 0) {

								try {

									productTemplate.sale_delay = ParserUtils.parseTo_Float(temp);

								} catch (java.lang.Exception ex_tFileInputDelimited_3) {
									globalMap.put("tFileInputDelimited_3_ERROR_MESSAGE",
											ex_tFileInputDelimited_3.getMessage());
									rowstate_tFileInputDelimited_3.setException(new RuntimeException(String.format(
											"Couldn't parse value for column '%s' in '%s', value is '%s'. Details: %s",
											"sale_delay", "productTemplate", temp, ex_tFileInputDelimited_3),
											ex_tFileInputDelimited_3));
								}

							} else {

								productTemplate.sale_delay = null;

							}

							columnIndexWithD_tFileInputDelimited_3 = 34;

							productTemplate.tracking = fid_tFileInputDelimited_3
									.get(columnIndexWithD_tFileInputDelimited_3);

							columnIndexWithD_tFileInputDelimited_3 = 35;

							productTemplate.description_picking = fid_tFileInputDelimited_3
									.get(columnIndexWithD_tFileInputDelimited_3);

							columnIndexWithD_tFileInputDelimited_3 = 36;

							productTemplate.description_pickingout = fid_tFileInputDelimited_3
									.get(columnIndexWithD_tFileInputDelimited_3);

							columnIndexWithD_tFileInputDelimited_3 = 37;

							productTemplate.description_pickingin = fid_tFileInputDelimited_3
									.get(columnIndexWithD_tFileInputDelimited_3);

							columnIndexWithD_tFileInputDelimited_3 = 38;

							productTemplate.available_in_pos = fid_tFileInputDelimited_3
									.get(columnIndexWithD_tFileInputDelimited_3);

							columnIndexWithD_tFileInputDelimited_3 = 39;

							productTemplate.to_weight = fid_tFileInputDelimited_3
									.get(columnIndexWithD_tFileInputDelimited_3);

							columnIndexWithD_tFileInputDelimited_3 = 40;

							productTemplate.pos_categ_id = fid_tFileInputDelimited_3
									.get(columnIndexWithD_tFileInputDelimited_3);

							if (rowstate_tFileInputDelimited_3.getException() != null) {
								throw rowstate_tFileInputDelimited_3.getException();
							}

						} catch (java.lang.Exception e) {
							globalMap.put("tFileInputDelimited_3_ERROR_MESSAGE", e.getMessage());
							whetherReject_tFileInputDelimited_3 = true;

							System.err.println(e.getMessage());
							productTemplate = null;

						}

						/**
						 * [tFileInputDelimited_3 begin ] stop
						 */

						/**
						 * [tFileInputDelimited_3 main ] start
						 */

						currentComponent = "tFileInputDelimited_3";

						tos_count_tFileInputDelimited_3++;

						/**
						 * [tFileInputDelimited_3 main ] stop
						 */

						/**
						 * [tFileInputDelimited_3 process_data_begin ] start
						 */

						currentComponent = "tFileInputDelimited_3";

						/**
						 * [tFileInputDelimited_3 process_data_begin ] stop
						 */
// Start of branch "productTemplate"
						if (productTemplate != null) {

							/**
							 * [tAdvancedHash_productTemplate main ] start
							 */

							currentComponent = "tAdvancedHash_productTemplate";

							if (execStat) {
								runStat.updateStatOnConnection(iterateId, 1, 1

										, "productTemplate"

								);
							}

							productTemplateStruct productTemplate_HashRow = new productTemplateStruct();

							productTemplate_HashRow.id = productTemplate.id;

							productTemplate_HashRow.message_main_attachment_id = productTemplate.message_main_attachment_id;

							productTemplate_HashRow.name = productTemplate.name;

							productTemplate_HashRow.sequence = productTemplate.sequence;

							productTemplate_HashRow.description = productTemplate.description;

							productTemplate_HashRow.description_purchase = productTemplate.description_purchase;

							productTemplate_HashRow.description_sale = productTemplate.description_sale;

							productTemplate_HashRow.detailed_type = productTemplate.detailed_type;

							productTemplate_HashRow.type = productTemplate.type;

							productTemplate_HashRow.categ_id = productTemplate.categ_id;

							productTemplate_HashRow.list_price = productTemplate.list_price;

							productTemplate_HashRow.volume = productTemplate.volume;

							productTemplate_HashRow.weight = productTemplate.weight;

							productTemplate_HashRow.sale_ok = productTemplate.sale_ok;

							productTemplate_HashRow.purchase_ok = productTemplate.purchase_ok;

							productTemplate_HashRow.uom_id = productTemplate.uom_id;

							productTemplate_HashRow.uom_po_id = productTemplate.uom_po_id;

							productTemplate_HashRow.company_id = productTemplate.company_id;

							productTemplate_HashRow.active = productTemplate.active;

							productTemplate_HashRow.color = productTemplate.color;

							productTemplate_HashRow.default_code = productTemplate.default_code;

							productTemplate_HashRow.can_image_1024_be_zoomed = productTemplate.can_image_1024_be_zoomed;

							productTemplate_HashRow.has_configurable_attributes = productTemplate.has_configurable_attributes;

							productTemplate_HashRow.priority = productTemplate.priority;

							productTemplate_HashRow.create_uid = productTemplate.create_uid;

							productTemplate_HashRow.create_date = productTemplate.create_date;

							productTemplate_HashRow.write_uid = productTemplate.write_uid;

							productTemplate_HashRow.write_date = productTemplate.write_date;

							productTemplate_HashRow.service_type = productTemplate.service_type;

							productTemplate_HashRow.sale_line_warn = productTemplate.sale_line_warn;

							productTemplate_HashRow.sale_line_warn_msg = productTemplate.sale_line_warn_msg;

							productTemplate_HashRow.expense_policy = productTemplate.expense_policy;

							productTemplate_HashRow.invoice_policy = productTemplate.invoice_policy;

							productTemplate_HashRow.sale_delay = productTemplate.sale_delay;

							productTemplate_HashRow.tracking = productTemplate.tracking;

							productTemplate_HashRow.description_picking = productTemplate.description_picking;

							productTemplate_HashRow.description_pickingout = productTemplate.description_pickingout;

							productTemplate_HashRow.description_pickingin = productTemplate.description_pickingin;

							productTemplate_HashRow.available_in_pos = productTemplate.available_in_pos;

							productTemplate_HashRow.to_weight = productTemplate.to_weight;

							productTemplate_HashRow.pos_categ_id = productTemplate.pos_categ_id;

							tHash_Lookup_productTemplate.put(productTemplate_HashRow);

							tos_count_tAdvancedHash_productTemplate++;

							/**
							 * [tAdvancedHash_productTemplate main ] stop
							 */

							/**
							 * [tAdvancedHash_productTemplate process_data_begin ] start
							 */

							currentComponent = "tAdvancedHash_productTemplate";

							/**
							 * [tAdvancedHash_productTemplate process_data_begin ] stop
							 */

							/**
							 * [tAdvancedHash_productTemplate process_data_end ] start
							 */

							currentComponent = "tAdvancedHash_productTemplate";

							/**
							 * [tAdvancedHash_productTemplate process_data_end ] stop
							 */

						} // End of branch "productTemplate"

						/**
						 * [tFileInputDelimited_3 process_data_end ] start
						 */

						currentComponent = "tFileInputDelimited_3";

						/**
						 * [tFileInputDelimited_3 process_data_end ] stop
						 */

						/**
						 * [tFileInputDelimited_3 end ] start
						 */

						currentComponent = "tFileInputDelimited_3";

					}
				} finally {
					if (!((Object) ("C:/Program Files (x86)/TOS_DI-8.0.1/studio/workspace/productTemplate.csv") instanceof java.io.InputStream)) {
						if (fid_tFileInputDelimited_3 != null) {
							fid_tFileInputDelimited_3.close();
						}
					}
					if (fid_tFileInputDelimited_3 != null) {
						globalMap.put("tFileInputDelimited_3_NB_LINE", fid_tFileInputDelimited_3.getRowNumber());

					}
				}

				ok_Hash.put("tFileInputDelimited_3", true);
				end_Hash.put("tFileInputDelimited_3", System.currentTimeMillis());

				/**
				 * [tFileInputDelimited_3 end ] stop
				 */

				/**
				 * [tAdvancedHash_productTemplate end ] start
				 */

				currentComponent = "tAdvancedHash_productTemplate";

				tHash_Lookup_productTemplate.endPut();

				if (execStat) {
					runStat.updateStat(resourceMap, iterateId, 2, 0, "productTemplate");
				}

				ok_Hash.put("tAdvancedHash_productTemplate", true);
				end_Hash.put("tAdvancedHash_productTemplate", System.currentTimeMillis());

				/**
				 * [tAdvancedHash_productTemplate end ] stop
				 */

			} // end the resume

		} catch (java.lang.Exception e) {

			TalendException te = new TalendException(e, currentComponent, globalMap);

			throw te;
		} catch (java.lang.Error error) {

			runStat.stopThreadStat();

			throw error;
		} finally {

			try {

				/**
				 * [tFileInputDelimited_3 finally ] start
				 */

				currentComponent = "tFileInputDelimited_3";

				/**
				 * [tFileInputDelimited_3 finally ] stop
				 */

				/**
				 * [tAdvancedHash_productTemplate finally ] start
				 */

				currentComponent = "tAdvancedHash_productTemplate";

				/**
				 * [tAdvancedHash_productTemplate finally ] stop
				 */

			} catch (java.lang.Exception e) {
				// ignore
			} catch (java.lang.Error error) {
				// ignore
			}
			resourceMap = null;
		}

		globalMap.put("tFileInputDelimited_3_SUBPROCESS_STATE", 1);
	}

	public String resuming_logs_dir_path = null;
	public String resuming_checkpoint_path = null;
	public String parent_part_launcher = null;
	private String resumeEntryMethodName = null;
	private boolean globalResumeTicket = false;

	public boolean watch = false;
	// portStats is null, it means don't execute the statistics
	public Integer portStats = null;
	public int portTraces = 4334;
	public String clientHost;
	public String defaultClientHost = "localhost";
	public String contextStr = "Default";
	public boolean isDefaultContext = true;
	public String pid = "0";
	public String rootPid = null;
	public String fatherPid = null;
	public String fatherNode = null;
	public long startTime = 0;
	public boolean isChildJob = false;
	public String log4jLevel = "";

	private boolean enableLogStash;

	private boolean execStat = true;

	private ThreadLocal<java.util.Map<String, String>> threadLocal = new ThreadLocal<java.util.Map<String, String>>() {
		protected java.util.Map<String, String> initialValue() {
			java.util.Map<String, String> threadRunResultMap = new java.util.HashMap<String, String>();
			threadRunResultMap.put("errorCode", null);
			threadRunResultMap.put("status", "");
			return threadRunResultMap;
		};
	};

	protected PropertiesWithType context_param = new PropertiesWithType();
	public java.util.Map<String, Object> parentContextMap = new java.util.HashMap<String, Object>();

	public String status = "";

	public static void main(String[] args) {
		final productDim productDimClass = new productDim();

		int exitCode = productDimClass.runJobInTOS(args);

		System.exit(exitCode);
	}

	public String[][] runJob(String[] args) {

		int exitCode = runJobInTOS(args);
		String[][] bufferValue = new String[][] { { Integer.toString(exitCode) } };

		return bufferValue;
	}

	public boolean hastBufferOutputComponent() {
		boolean hastBufferOutput = false;

		return hastBufferOutput;
	}

	public int runJobInTOS(String[] args) {
		// reset status
		status = "";

		String lastStr = "";
		for (String arg : args) {
			if (arg.equalsIgnoreCase("--context_param")) {
				lastStr = arg;
			} else if (lastStr.equals("")) {
				evalParam(arg);
			} else {
				evalParam(lastStr + " " + arg);
				lastStr = "";
			}
		}
		enableLogStash = "true".equalsIgnoreCase(System.getProperty("audit.enabled"));

		if (clientHost == null) {
			clientHost = defaultClientHost;
		}

		if (pid == null || "0".equals(pid)) {
			pid = TalendString.getAsciiRandomString(6);
		}

		if (rootPid == null) {
			rootPid = pid;
		}
		if (fatherPid == null) {
			fatherPid = pid;
		} else {
			isChildJob = true;
		}

		if (portStats != null) {
			// portStats = -1; //for testing
			if (portStats < 0 || portStats > 65535) {
				// issue:10869, the portStats is invalid, so this client socket can't open
				System.err.println("The statistics socket port " + portStats + " is invalid.");
				execStat = false;
			}
		} else {
			execStat = false;
		}
		boolean inOSGi = routines.system.BundleUtils.inOSGi();

		if (inOSGi) {
			java.util.Dictionary<String, Object> jobProperties = routines.system.BundleUtils.getJobProperties(jobName);

			if (jobProperties != null && jobProperties.get("context") != null) {
				contextStr = (String) jobProperties.get("context");
			}
		}

		try {
			// call job/subjob with an existing context, like: --context=production. if
			// without this parameter, there will use the default context instead.
			java.io.InputStream inContext = productDim.class.getClassLoader()
					.getResourceAsStream("pacifico/productdim_0_1/contexts/" + contextStr + ".properties");
			if (inContext == null) {
				inContext = productDim.class.getClassLoader()
						.getResourceAsStream("config/contexts/" + contextStr + ".properties");
			}
			if (inContext != null) {
				try {
					// defaultProps is in order to keep the original context value
					if (context != null && context.isEmpty()) {
						defaultProps.load(inContext);
						context = new ContextProperties(defaultProps);
					}
				} finally {
					inContext.close();
				}
			} else if (!isDefaultContext) {
				// print info and job continue to run, for case: context_param is not empty.
				System.err.println("Could not find the context " + contextStr);
			}

			if (!context_param.isEmpty()) {
				context.putAll(context_param);
				// set types for params from parentJobs
				for (Object key : context_param.keySet()) {
					String context_key = key.toString();
					String context_type = context_param.getContextType(context_key);
					context.setContextType(context_key, context_type);

				}
			}
			class ContextProcessing {
				private void processContext_0() {
				}

				public void processAllContext() {
					processContext_0();
				}
			}

			new ContextProcessing().processAllContext();
		} catch (java.io.IOException ie) {
			System.err.println("Could not load context " + contextStr);
			ie.printStackTrace();
		}

		// get context value from parent directly
		if (parentContextMap != null && !parentContextMap.isEmpty()) {
		}

		// Resume: init the resumeUtil
		resumeEntryMethodName = ResumeUtil.getResumeEntryMethodName(resuming_checkpoint_path);
		resumeUtil = new ResumeUtil(resuming_logs_dir_path, isChildJob, rootPid);
		resumeUtil.initCommonInfo(pid, rootPid, fatherPid, projectName, jobName, contextStr, jobVersion);

		List<String> parametersToEncrypt = new java.util.ArrayList<String>();
		// Resume: jobStart
		resumeUtil.addLog("JOB_STARTED", "JOB:" + jobName, parent_part_launcher, Thread.currentThread().getId() + "",
				"", "", "", "", resumeUtil.convertToJsonText(context, parametersToEncrypt));

		if (execStat) {
			try {
				runStat.openSocket(!isChildJob);
				runStat.setAllPID(rootPid, fatherPid, pid, jobName);
				runStat.startThreadStat(clientHost, portStats);
				runStat.updateStatOnJob(RunStat.JOBSTART, fatherNode);
			} catch (java.io.IOException ioException) {
				ioException.printStackTrace();
			}
		}

		java.util.concurrent.ConcurrentHashMap<Object, Object> concurrentHashMap = new java.util.concurrent.ConcurrentHashMap<Object, Object>();
		globalMap.put("concurrentHashMap", concurrentHashMap);

		long startUsedMemory = Runtime.getRuntime().totalMemory() - Runtime.getRuntime().freeMemory();
		long endUsedMemory = 0;
		long end = 0;

		startTime = System.currentTimeMillis();

		this.globalResumeTicket = true;// to run tPreJob

		this.globalResumeTicket = false;// to run others jobs

		try {
			errorCode = null;
			tFileInputDelimited_2Process(globalMap);
			if (!"failure".equals(status)) {
				status = "end";
			}
		} catch (TalendException e_tFileInputDelimited_2) {
			globalMap.put("tFileInputDelimited_2_SUBPROCESS_STATE", -1);

			e_tFileInputDelimited_2.printStackTrace();

		}

		this.globalResumeTicket = true;// to run tPostJob

		end = System.currentTimeMillis();

		if (watch) {
			System.out.println((end - startTime) + " milliseconds");
		}

		endUsedMemory = Runtime.getRuntime().totalMemory() - Runtime.getRuntime().freeMemory();
		if (false) {
			System.out.println((endUsedMemory - startUsedMemory) + " bytes memory increase when running : productDim");
		}

		if (execStat) {
			runStat.updateStatOnJob(RunStat.JOBEND, fatherNode);
			runStat.stopThreadStat();
		}
		int returnCode = 0;

		if (errorCode == null) {
			returnCode = status != null && status.equals("failure") ? 1 : 0;
		} else {
			returnCode = errorCode.intValue();
		}
		resumeUtil.addLog("JOB_ENDED", "JOB:" + jobName, parent_part_launcher, Thread.currentThread().getId() + "", "",
				"" + returnCode, "", "", "");

		return returnCode;

	}

	// only for OSGi env
	public void destroy() {
		closeS3Connections();

	}

	private void closeS3Connections() {
		try {
			com.amazonaws.services.s3.AmazonS3Client conn_tS3Connection_1 = (com.amazonaws.services.s3.AmazonS3Client) globalMap
					.get("conn_tS3Connection_1");
			if (conn_tS3Connection_1 != null) {
				conn_tS3Connection_1.shutdown();
			}
		} catch (java.lang.Exception e) {
		}
	}

	private java.util.Map<String, Object> getSharedConnections4REST() {
		java.util.Map<String, Object> connections = new java.util.HashMap<String, Object>();

		connections.put("conn_tS3Connection_1", globalMap.get("conn_tS3Connection_1"));

		return connections;
	}

	private void evalParam(String arg) {
		if (arg.startsWith("--resuming_logs_dir_path")) {
			resuming_logs_dir_path = arg.substring(25);
		} else if (arg.startsWith("--resuming_checkpoint_path")) {
			resuming_checkpoint_path = arg.substring(27);
		} else if (arg.startsWith("--parent_part_launcher")) {
			parent_part_launcher = arg.substring(23);
		} else if (arg.startsWith("--watch")) {
			watch = true;
		} else if (arg.startsWith("--stat_port=")) {
			String portStatsStr = arg.substring(12);
			if (portStatsStr != null && !portStatsStr.equals("null")) {
				portStats = Integer.parseInt(portStatsStr);
			}
		} else if (arg.startsWith("--trace_port=")) {
			portTraces = Integer.parseInt(arg.substring(13));
		} else if (arg.startsWith("--client_host=")) {
			clientHost = arg.substring(14);
		} else if (arg.startsWith("--context=")) {
			contextStr = arg.substring(10);
			isDefaultContext = false;
		} else if (arg.startsWith("--father_pid=")) {
			fatherPid = arg.substring(13);
		} else if (arg.startsWith("--root_pid=")) {
			rootPid = arg.substring(11);
		} else if (arg.startsWith("--father_node=")) {
			fatherNode = arg.substring(14);
		} else if (arg.startsWith("--pid=")) {
			pid = arg.substring(6);
		} else if (arg.startsWith("--context_type")) {
			String keyValue = arg.substring(15);
			int index = -1;
			if (keyValue != null && (index = keyValue.indexOf('=')) > -1) {
				if (fatherPid == null) {
					context_param.setContextType(keyValue.substring(0, index),
							replaceEscapeChars(keyValue.substring(index + 1)));
				} else { // the subjob won't escape the especial chars
					context_param.setContextType(keyValue.substring(0, index), keyValue.substring(index + 1));
				}

			}

		} else if (arg.startsWith("--context_param")) {
			String keyValue = arg.substring(16);
			int index = -1;
			if (keyValue != null && (index = keyValue.indexOf('=')) > -1) {
				if (fatherPid == null) {
					context_param.put(keyValue.substring(0, index), replaceEscapeChars(keyValue.substring(index + 1)));
				} else { // the subjob won't escape the especial chars
					context_param.put(keyValue.substring(0, index), keyValue.substring(index + 1));
				}
			}
		} else if (arg.startsWith("--log4jLevel=")) {
			log4jLevel = arg.substring(13);
		} else if (arg.startsWith("--audit.enabled") && arg.contains("=")) {// for trunjob call
			final int equal = arg.indexOf('=');
			final String key = arg.substring("--".length(), equal);
			System.setProperty(key, arg.substring(equal + 1));
		}
	}

	private static final String NULL_VALUE_EXPRESSION_IN_COMMAND_STRING_FOR_CHILD_JOB_ONLY = "<TALEND_NULL>";

	private final String[][] escapeChars = { { "\\\\", "\\" }, { "\\n", "\n" }, { "\\'", "\'" }, { "\\r", "\r" },
			{ "\\f", "\f" }, { "\\b", "\b" }, { "\\t", "\t" } };

	private String replaceEscapeChars(String keyValue) {

		if (keyValue == null || ("").equals(keyValue.trim())) {
			return keyValue;
		}

		StringBuilder result = new StringBuilder();
		int currIndex = 0;
		while (currIndex < keyValue.length()) {
			int index = -1;
			// judege if the left string includes escape chars
			for (String[] strArray : escapeChars) {
				index = keyValue.indexOf(strArray[0], currIndex);
				if (index >= 0) {

					result.append(keyValue.substring(currIndex, index + strArray[0].length()).replace(strArray[0],
							strArray[1]));
					currIndex = index + strArray[0].length();
					break;
				}
			}
			// if the left string doesn't include escape chars, append the left into the
			// result
			if (index < 0) {
				result.append(keyValue.substring(currIndex));
				currIndex = currIndex + keyValue.length();
			}
		}

		return result.toString();
	}

	public Integer getErrorCode() {
		return errorCode;
	}

	public String getStatus() {
		return status;
	}

	ResumeUtil resumeUtil = null;
}
/************************************************************************************************
 * 230508 characters generated by Talend Open Studio for Data Integration on the
 * November 2, 2022 at 6:51:35 PM CST
 ************************************************************************************************/